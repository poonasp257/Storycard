{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Board.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    float: left;\\n    line-height: 0px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    position: relative;\\n    top: \", \"px;\\n    left: \", \"px;\\n    width: \", \"px;\\n    height: \", \"px;\\n    border: solid;\\n    border-width: 2px;\\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport * as Utility from '../lib/Utility';\nimport tileImg from '../resources/tile.jpg';\nimport DropZone from './DropZone';\nconst Main = styled.div(_templateObject(), props => props.rect.top, props => props.rect.left, props => props.rect.width, props => props.rect.height);\nconst Tile = styled.div(_templateObject2());\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      background: null,\n      rect: {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      }\n    };\n  }\n\n  componentWillMount() {\n    const offsetW = 50;\n    const offsetH = 50;\n    const row = this.props.row;\n    const col = this.props.col;\n    this.setState({\n      background: React.createElement(Tiles, {\n        offsetX: offsetW,\n        offsetY: offsetH,\n        row: row,\n        col: col,\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }),\n      width: col * offsetW,\n      height: row * offsetH\n    });\n  }\n\n  render() {\n    let items = Utility.ConvertToHTML(this.props.items);\n    const rect = {\n      left: 50,\n      top: 50,\n      width: this.state.width,\n      height: this.state.height\n    };\n    return React.createElement(DropZone, {\n      tag: \"board\",\n      rect: rect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Main, {\n      rect: rect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Tiles, {\n      row: 1,\n      col: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: items\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction Tiles(props) {\n  let tiles = [];\n  const size = props.row * props.col;\n\n  for (let i = 0; i < size; ++i) {\n    tiles.push(React.createElement(\"img\", {\n      src: tileImg,\n      width: props.offsetX,\n      height: props.offsetY,\n      key: i,\n      alt: \"tile\",\n      draggable: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Tile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, tiles);\n}\n\nexport default Board;\n/*\r\n\r\n    GetObjects = async () => {\r\n        //const objects = await this.CallApi();\r\n        //this.props.setContainer(objects);\r\n    }\r\n\r\n    CallApi = () => {\r\n    }\r\n*/","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Board.js"],"names":["React","Component","styled","Utility","tileImg","DropZone","Main","div","props","rect","top","left","width","height","Tile","Board","state","background","componentWillMount","offsetW","offsetH","row","col","setState","render","items","ConvertToHTML","__html","Tiles","tiles","size","i","push","offsetX","offsetY"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Utility from '../lib/Utility';\r\n\r\nimport tileImg from '../resources/tile.jpg';\r\nimport DropZone from './DropZone';\r\n\r\nconst Main = styled.div`\r\n    position: relative;\r\n    top: ${props => props.rect.top}px;\r\n    left: ${props => props.rect.left}px;\r\n    width: ${props => props.rect.width}px;\r\n    height: ${props => props.rect.height}px;\r\n    border: solid;\r\n    border-width: 2px;\r\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Tile = styled.div`\r\n    float: left;\r\n    line-height: 0px;\r\n`;\r\n\r\nclass Board extends Component {\r\n    state = {\r\n        background: null,\r\n        rect: {\r\n            left: 0,\r\n            top: 0,\r\n            width: 0,\r\n            height: 0\r\n        }\r\n    }\r\n\r\n    componentWillMount() {     \r\n        const offsetW = 50;\r\n        const offsetH = 50;\r\n        const row = this.props.row;\r\n        const col = this.props.col;\r\n\r\n        this.setState({\r\n            background: \r\n                <Tiles offsetX={offsetW} offsetY={offsetH} row={row} col={col} key={0}/> \r\n            ,\r\n            width: col * offsetW,\r\n            height: row * offsetH,\r\n        });\r\n    }\r\n   \r\n    render() {\r\n        let items = Utility.ConvertToHTML(this.props.items);\r\n\r\n        const rect  = {\r\n            left: 50,\r\n            top: 50,\r\n            width: this.state.width,\r\n            height: this.state.height\r\n        };        \r\n\r\n        return (  \r\n            <DropZone tag=\"board\" rect={rect}>\r\n                <Main rect={rect}>\r\n                    <Tiles row={1} col={1}/>\r\n                </Main>\r\n                <div dangerouslySetInnerHTML={{ __html: items }} />\r\n            </DropZone>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Tiles(props) {\r\n    let tiles = [];\r\n    const size = props.row * props.col;\r\n    for (let i = 0; i < size; ++i) {\r\n        tiles.push(<img\r\n            src={tileImg} width={props.offsetX} height={props.offsetY} \r\n            key={i} alt=\"tile\" draggable=\"false\" />);\r\n    }\r\n\r\n    return (\r\n        <Tile>\r\n            {tiles}\r\n        </Tile>\r\n    );\r\n}\r\n\r\nexport default Board; \r\n\r\n\r\n/*\r\n\r\n    GetObjects = async () => {\r\n        //const objects = await this.CallApi();\r\n        //this.props.setContainer(objects);\r\n    }\r\n\r\n    CallApi = () => {\r\n    }\r\n*/"]},"metadata":{},"sourceType":"module"}