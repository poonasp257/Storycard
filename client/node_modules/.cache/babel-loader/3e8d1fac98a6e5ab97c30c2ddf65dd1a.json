{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { objectTypeSpreadProperty } from '@babel/types';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fixPositon = (x, y) => {\n      this.fixedX = x - this.offsetX * 0.5;\n      this.fixedY = y - this.offsetY * 0.5;\n      this.dragElem.setAttribute('style', \"\\n        position:absolute;\\n        left: \".concat(this.fixedX, \"px;\\n        top: \").concat(this.fixedY, \"px;\\n        \"));\n    };\n\n    this.GetTarget = tag => {\n      const targets = document.getElementsByClassName(tag);\n      return Object.keys(targets).map(key => {\n        return {\n          left: targets[key].style[\"left\"],\n          top: targets[key].style[\"top\"],\n          width: targets[key].style[\"width\"],\n          hegiht: targets[key].style[\"height\"]\n        };\n      });\n    };\n\n    this.Overlap = (lhs, rhs) => {\n      lhs.top > rhs.bottom || lhs.right < rhs.left || lhs.bottom < rhs.top || lhs.left > rhs.right;\n    };\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (x, y) => {\n      this.dragElem = this.sourceElem.cloneNode(true);\n      this.fixPositon(x, y);\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (this.state.clicked) {\n        window.getSelection().removeAllRanges();\n        this.moveDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      this.fixPositon(x, y);\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', this.handleMouseMove);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n      window.getSelection().removeAllRanges();\n      this.endDrag(e.clientX, e.clientY);\n    };\n\n    this.endDrag = (x, y) => {\n      this.fixPositon(x, y);\n      const targets = this.GetTarget(this.props.tag);\n      const dragRect = this.dragElem.getBoundingClientRect();\n      Object.keys(targets).map(key => {\n        if (this.overlap(targets[key], dragRect) === false) console.log('overlapped');\n      });\n      this.props.setContainer(this.dragElem);\n      document.body.removeChild(this.dragElem);\n      this.setState({\n        clicked: false,\n        dragging: false\n      });\n    };\n\n    this.state = {\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.fixedX = 0;\n    this.fixedY = 0;\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    const rect = this.sourceElem.getBoundingClientRect();\n    this.offsetX = rect.width;\n    this.offsetY = rect.height;\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.propTypes = {\n  tag: PropTypes.string.isRequired\n};\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","ReactDOM","PropTypes","objectTypeSpreadProperty","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","fixPositon","x","y","fixedX","offsetX","fixedY","offsetY","dragElem","setAttribute","GetTarget","tag","targets","document","getElementsByClassName","Object","keys","map","key","left","style","top","width","hegiht","Overlap","lhs","rhs","bottom","right","addListeners","element","addEventListener","handleMouseDown","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","sourceElem","cloneNode","body","appendChild","setState","clicked","state","window","getSelection","removeAllRanges","moveDrag","dragging","preventDefault","removeEventListener","endDrag","dragRect","getBoundingClientRect","overlap","console","log","setContainer","removeChild","componentDidMount","imgs","getElementsByTagName","i","length","rect","height","render","content","children","c","propTypes","string","isRequired","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { objectTypeSpreadProperty } from '@babel/types';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.fixedX = 0;\r\n        this.fixedY = 0;\r\n        this.offsetX = 0;\r\n        this.offsetY = 0;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n            imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        const rect = this.sourceElem.getBoundingClientRect();\r\n        this.offsetX = rect.width;\r\n        this.offsetY = rect.height;\r\n        this.addListeners(this.sourceElem);\r\n    }\r\n\r\n    fixPositon = (x, y) => {\r\n        this.fixedX = x - (this.offsetX * 0.5);  \r\n        this.fixedY = y - (this.offsetY * 0.5);\r\n        \r\n        this.dragElem.setAttribute('style', `\r\n        position:absolute;\r\n        left: ${this.fixedX}px;\r\n        top: ${this.fixedY}px;\r\n        `);\r\n    };\r\n    \r\n    GetTarget = (tag) => {\r\n        const targets = document.getElementsByClassName(tag);\r\n        return (\r\n            Object.keys(targets).map((key) => {\r\n                return ({\r\n                    left: targets[key].style[\"left\"],\r\n                    top: targets[key].style[\"top\"],\r\n                    width: targets[key].style[\"width\"],\r\n                    hegiht: targets[key].style[\"height\"]\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    Overlap = (lhs, rhs) => {\r\n        lhs.top > rhs.bottom ||\r\n        lhs.right < rhs.left ||\r\n        lhs.bottom < rhs.top ||\r\n        lhs.left > rhs.right\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n    \r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {   \r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (x, y) => {        \r\n        this.dragElem = this.sourceElem.cloneNode(true);        \r\n        this.fixPositon(x, y);\r\n\r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    } \r\n\r\n    handleMouseMove = (e) => {        \r\n        if (this.state.clicked) {\r\n            window.getSelection().removeAllRanges();\r\n            this.moveDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {       \r\n        this.fixPositon(x, y);        \r\n        this.setState({dragging: true});        \r\n    } \r\n\r\n    handleMouseUp = (e) => {\r\n            e.preventDefault();\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            window.getSelection().removeAllRanges();\r\n            this.endDrag(e.clientX, e.clientY);\r\n    }\r\n\r\n    endDrag = (x ,y) => {\r\n        this.fixPositon(x, y);\r\n\r\n        const targets = this.GetTarget(this.props.tag);\r\n        const dragRect = this.dragElem.getBoundingClientRect();\r\n\r\n        Object.keys(targets).map((key) => {\r\n            if(this.overlap(targets[key], dragRect) === false) console.log('overlapped')\r\n        })\r\n\r\n\r\n\r\n        this.props.setContainer(this.dragElem);\r\n        document.body.removeChild(this.dragElem);\r\n        this.setState({ \r\n            clicked: false,\r\n            dragging: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n\r\n        return (\r\n            <div ref={(c) => {this.sourceElem = c;}}>\r\n                {content}         \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.propTypes = {\r\n    tag: PropTypes.string.isRequired\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}