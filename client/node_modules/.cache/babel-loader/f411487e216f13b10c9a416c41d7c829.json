{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Board.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    float: left;\\n    line-height: 0px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: \", \"px;\\n    left: \", \"px;\\n    width: \", \"px;\\n    height: \", \"px;\\n    border: solid;\\n    border-width: 2px;\\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport * as Utility from '../lib/Utility';\nimport tileImg from '../resources/tile.jpg';\nimport DropZone from './DropZone';\nconst Main = styled.div(_templateObject(), props => props.rect.top, props => props.rect.left, props => props.rect.width, props => props.rect.height);\nconst Tile = styled.div(_templateObject2());\n\nfunction Board({\n  left,\n  top,\n  row,\n  col,\n  items\n}) {\n  const offsetX = 50;\n  const offsetY = 50;\n  const rect = {\n    left: left,\n    top: top,\n    width: col * offsetX,\n    height: row * offsetY\n  };\n  let convertedItems = Utility.ConvertToHTML(items);\n  return React.createElement(DropZone, {\n    tag: \"board\",\n    rect: rect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Main, {\n    rect: rect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Tiles, {\n    offsetX: offsetX,\n    offsetY: offsetY,\n    row: row,\n    col: col,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: convertedItems\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }));\n}\n\nfunction Tiles({\n  offsetX,\n  offsetY,\n  row,\n  col\n}) {\n  let tiles = [];\n\n  for (let i = 0; i < row * col; ++i) {\n    tiles.push(React.createElement(\"img\", {\n      src: tile,\n      width: offsetX,\n      height: offsetY,\n      key: i,\n      alt: \"tile\",\n      draggable: \"false\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Tile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, tiles);\n}\n\nexport default Board;\n/*\r\n\r\n    GetObjects = async () => {\r\n        //const objects = await this.CallApi();\r\n        //this.props.setContainer(objects);\r\n    }\r\n\r\n    CallApi = () => {\r\n    }\r\n*/","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Board.js"],"names":["React","Component","styled","Utility","tileImg","DropZone","Main","div","props","rect","top","left","width","height","Tile","Board","row","col","items","offsetX","offsetY","convertedItems","ConvertToHTML","__html","Tiles","tiles","i","push","tile"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAV,oBAECC,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,GAFrB,EAGEF,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWE,IAHtB,EAIGH,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWG,KAJvB,EAKIJ,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWI,MALxB,CAAV;AAWA,MAAMC,IAAI,GAAGZ,MAAM,CAACK,GAAV,oBAAV;;AAKA,SAASQ,KAAT,CAAe;AAACJ,EAAAA,IAAD;AAAOD,EAAAA,GAAP;AAAYM,EAAAA,GAAZ;AAAiBC,EAAAA,GAAjB;AAAsBC,EAAAA;AAAtB,CAAf,EAA6C;AACzC,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMX,IAAI,GAAG;AACTE,IAAAA,IAAI,EAAEA,IADG;AAETD,IAAAA,GAAG,EAAEA,GAFI;AAGTE,IAAAA,KAAK,EAAEK,GAAG,GAAGE,OAHJ;AAITN,IAAAA,MAAM,EAAEG,GAAG,GAAGI;AAJL,GAAb;AAOA,MAAIC,cAAc,GAAGlB,OAAO,CAACmB,aAAR,CAAsBJ,KAAtB,CAArB;AACA,SACI,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAC,OAAd;AAAsB,IAAA,IAAI,EAAET,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEA,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEU,OAAhB;AAAyB,IAAA,OAAO,EAAEC,OAAlC;AAA2C,IAAA,GAAG,EAAEJ,GAAhD;AAAqD,IAAA,GAAG,EAAEC,GAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAK,IAAA,uBAAuB,EAAE;AAAEM,MAAAA,MAAM,EAAEF;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ;AAQH;;AAED,SAASG,KAAT,CAAe;AAACL,EAAAA,OAAD;AAAUC,EAAAA,OAAV;AAAmBJ,EAAAA,GAAnB;AAAwBC,EAAAA;AAAxB,CAAf,EAA6C;AACzC,MAAIQ,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,GAAG,GAAGC,GAA1B,EAA+B,EAAES,CAAjC,EAAoC;AAChCD,IAAAA,KAAK,CAACE,IAAN,CAAW;AACP,MAAA,GAAG,EAAEC,IADE;AACI,MAAA,KAAK,EAAET,OADX;AACoB,MAAA,MAAM,EAAEC,OAD5B;AAEP,MAAA,GAAG,EAAEM,CAFE;AAEC,MAAA,GAAG,EAAC,MAFL;AAEY,MAAA,SAAS,EAAC,OAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AAGH;;AAED,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KADL,CADJ;AAKH;;AAED,eAAeV,KAAf;AAGA","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport * as Utility from '../lib/Utility';\r\nimport tileImg from '../resources/tile.jpg';\r\nimport DropZone from './DropZone';\r\n\r\nconst Main = styled.div`\r\n    position: absolute;\r\n    top: ${props => props.rect.top}px;\r\n    left: ${props => props.rect.left}px;\r\n    width: ${props => props.rect.width}px;\r\n    height: ${props => props.rect.height}px;\r\n    border: solid;\r\n    border-width: 2px;\r\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Tile = styled.div`\r\n    float: left;\r\n    line-height: 0px;\r\n`;\r\n\r\nfunction Board({left, top, row, col, items}) {\r\n    const offsetX = 50;\r\n    const offsetY = 50;\r\n    const rect = {\r\n        left: left,\r\n        top: top,\r\n        width: col * offsetX,\r\n        height: row * offsetY\r\n    };\r\n\r\n    let convertedItems = Utility.ConvertToHTML(items);    \r\n    return (\r\n        <DropZone tag=\"board\" rect={rect}>\r\n            <Main rect={rect}>\r\n                <Tiles offsetX={offsetX} offsetY={offsetY} row={row} col={col} />\r\n            </Main>\r\n            <div dangerouslySetInnerHTML={{ __html: convertedItems }} />\r\n        </DropZone>\r\n    );\r\n}\r\n\r\nfunction Tiles({offsetX, offsetY, row, col}) {\r\n    let tiles = [];\r\n    for (let i = 0; i < row * col; ++i) {\r\n        tiles.push(<img\r\n            src={tile} width={offsetX} height={offsetY} \r\n            key={i} alt=\"tile\" draggable=\"false\" />);\r\n    }\r\n\r\n    return (\r\n        <Tile>\r\n            {tiles}\r\n        </Tile>\r\n    );\r\n}\r\n\r\nexport default Board; \r\n\r\n\r\n/*\r\n\r\n    GetObjects = async () => {\r\n        //const objects = await this.CallApi();\r\n        //this.props.setContainer(objects);\r\n    }\r\n\r\n    CallApi = () => {\r\n    }\r\n*/"]},"metadata":{},"sourceType":"module"}