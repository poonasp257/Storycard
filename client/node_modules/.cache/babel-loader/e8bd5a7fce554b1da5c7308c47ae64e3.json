{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setFixedOffset = (x, y) => {\n      this.offsetX = x - this.rect.width * 0.5;\n      this.offsetY = y - this.rect.height * 0.5;\n    };\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (x, y) => {\n      this.setFixedOffset(x, y);\n      this.dragElem = this.sourceElem.cloneNode(true);\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(this.offsetX, \"px;\\n            top: \").concat(this.offsetY, \"px;\\n        \"));\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (this.state.clicked) {\n        window.getSelection().removeAllRanges();\n        this.moveDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      this.setFixedOffset(x, y);\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(this.offsetX, \"px;\\n            top: \").concat(this.offsetY, \"px;\\n        \"));\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', this.handleMouseMove);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n      window.getSelection().removeAllRanges();\n      this.endDrag(e.clientX, e.clientY);\n    };\n\n    this.endDrag = (x, y) => {\n      this.setFixedOffset(x, y); //console.log(ReactDOM.findDOMNode(document.refs.board))\n\n      let targets = document.getElementsByClassName(this.props.tag);\n      const rects = targets.map((target, index) => {\n        return {\n          left: target[index].style[\"left\"],\n          top: target[index].style[\"top\"],\n          width: target[index].style[\"width\"],\n          hegiht: target[index].style[\"hegiht\"]\n        };\n      });\n      console.log(rects);\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(this.offsetX, \"px;\\n            top: \").concat(this.offsetY, \"px;\\n        \"));\n      document.body.removeChild(this.dragElem);\n      this.setState({\n        clicked: false,\n        dragging: false\n      });\n      this.props.setContainer(this.dragElem);\n    };\n\n    this.state = {\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.rect = null;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    this.addListeners(this.sourceElem);\n    this.rect = this.sourceElem.getBoundingClientRect();\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","ReactDOM","PropTypes","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","setFixedOffset","x","y","offsetX","rect","width","offsetY","height","addListeners","element","addEventListener","handleMouseDown","document","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","dragElem","sourceElem","cloneNode","setAttribute","body","appendChild","setState","clicked","state","window","getSelection","removeAllRanges","moveDrag","dragging","preventDefault","removeEventListener","endDrag","targets","getElementsByClassName","tag","rects","map","target","index","left","style","top","hegiht","console","log","removeChild","setContainer","componentDidMount","imgs","getElementsByTagName","i","length","getBoundingClientRect","render","content","children","c","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.offsetX = 0;\r\n        this.offsetY = 0;\r\n        this.rect = null;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n            imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        this.addListeners(this.sourceElem);\r\n        this.rect = this.sourceElem.getBoundingClientRect();\r\n    }\r\n\r\n    setFixedOffset = (x, y) => {\r\n        this.offsetX = x - (this.rect.width * 0.5);  \r\n        this.offsetY = y - (this.rect.height * 0.5);\r\n    };\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n    \r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {   \r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (x, y) => {\r\n        this.setFixedOffset(x, y);\r\n        \r\n        this.dragElem = this.sourceElem.cloneNode(true);\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${this.offsetX}px;\r\n            top: ${this.offsetY}px;\r\n        `);\r\n\r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    } \r\n\r\n    handleMouseMove = (e) => {        \r\n        if (this.state.clicked) {\r\n            window.getSelection().removeAllRanges();\r\n            this.moveDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {       \r\n        this.setFixedOffset(x, y);\r\n\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${this.offsetX}px;\r\n            top: ${this.offsetY}px;\r\n        `);\r\n        \r\n        this.setState({dragging: true});        \r\n    } \r\n\r\n    handleMouseUp = (e) => {\r\n            e.preventDefault();\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            window.getSelection().removeAllRanges();\r\n            this.endDrag(e.clientX, e.clientY);\r\n    }\r\n\r\n    endDrag = (x ,y) => {\r\n        this.setFixedOffset(x, y);\r\n\r\n        //console.log(ReactDOM.findDOMNode(document.refs.board))\r\n        let targets = document.getElementsByClassName(this.props.tag);\r\n        const rects = targets.map((target, index) => {\r\n            return {\r\n                left: target[index].style[\"left\"],\r\n                top: target[index].style[\"top\"],\r\n                width: target[index].style[\"width\"],\r\n                hegiht: target[index].style[\"hegiht\"],\r\n            };\r\n        });\r\n\r\n        console.log(rects);\r\n\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${this.offsetX}px;\r\n            top: ${this.offsetY}px;\r\n        `);\r\n\r\n        document.body.removeChild(this.dragElem);\r\n        this.setState({ \r\n            clicked: false,\r\n            dragging: false\r\n        });\r\n\r\n\r\n        this.props.setContainer(this.dragElem);\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n\r\n        return (\r\n            <div ref={(c) => {this.sourceElem = c;}}>\r\n                {content}         \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}