{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      });\n    };\n\n    this.setCurrentTarget = (x, y) => {\n      const target = document.elementFromPoint(x, y) || document.body;\n      this.dragElem.style.zIndex = this.props.zIndex; // prevent it from selecting itself as the target\n\n      this.currentTarget = this.dragElem.contains(target) ? document.body : target;\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        console.log('down');\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (clientX, clientY) => {\n      const rect = this.containerElem.getBoundingClientRect();\n      this.setState({\n        clicked: true,\n        leftOffset: rect.left - clientX,\n        topOffset: rect.top - clientY,\n        left: rect.left,\n        top: rect.top\n      });\n    };\n\n    this.handleMouseMove = e => {\n      e.preventDefault();\n\n      if (this.state.clicked) {\n        this.drag(e.clientX, e.clientY);\n        window.getSelection().removeAllRanges();\n      }\n    };\n\n    this.drag = (x, y) => {\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      this.setState({\n        clicked: false\n      });\n\n      if (this.state.dragging) {\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n        this.drop(e.clientX, e.clientY);\n        window.getSelection().removeAllRanges();\n      }\n    };\n\n    this.drop = (clientX, clientY) => {\n      this.setState({\n        dragging: false\n      });\n    };\n\n    this.state = {\n      leftOffset: 0,\n      topOffset: 0,\n      left: 0,\n      top: 0,\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.currentTarget = null;\n    this.prevTarget = null;\n  }\n\n  componentDidMount() {\n    this.dragElem = React.cloneElement(this.sourceElem);\n    console.log(this.sourceElem);\n    console.log(this.dragElem);\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","addListeners","element","addEventListener","handleMouseDown","setCurrentTarget","x","y","target","document","elementFromPoint","body","dragElem","style","zIndex","currentTarget","contains","console","log","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","rect","containerElem","getBoundingClientRect","setState","clicked","leftOffset","left","topOffset","top","preventDefault","state","drag","window","getSelection","removeAllRanges","dragging","removeEventListener","drop","sourceElem","prevTarget","componentDidMount","cloneElement","imgs","getElementsByTagName","i","length","setAttribute","render","content","children","c","defaultProps","onDragStart","onDrag","onDragEnd","onDrop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leftOffset: 0,\r\n            topOffset: 0,\r\n            left: 0,\r\n            top: 0,\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.currentTarget = null;\r\n        this.prevTarget = null;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        this.dragElem = React.cloneElement(this.sourceElem);\r\n\r\n        console.log(this.sourceElem)\r\n        console.log(this.dragElem)\r\n\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n          imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        this.addListeners(this.sourceElem);\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); });\r\n    };\r\n\r\n    setCurrentTarget = (x, y) => {\r\n        const target = document.elementFromPoint(x, y) || document.body;\r\n        this.dragElem.style.zIndex = this.props.zIndex;\r\n        // prevent it from selecting itself as the target\r\n        this.currentTarget = this.dragElem.contains(target) ? document.body : target;\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {\r\n            console.log('down');\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (clientX, clientY) => {\r\n       const rect = this.containerElem.getBoundingClientRect();\r\n        this.setState({\r\n            clicked: true,\r\n            leftOffset: rect.left - clientX,\r\n            topOffset: rect.top - clientY,\r\n            left: rect.left,\r\n            top: rect.top,\r\n        });\r\n    } \r\n\r\n    handleMouseMove = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.clicked) {\r\n            this.drag(e.clientX, e.clientY);\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n    }\r\n\r\n    drag = (x, y) => {     \r\n        this.setState({dragging: true});\r\n    };\r\n\r\n    handleMouseUp = (e) => {\r\n        this.setState({ clicked: false });\r\n        if (this.state.dragging) {\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            this.drop(e.clientX, e.clientY);\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n    }\r\n\r\n    drop = (clientX, clientY) => {\r\n        this.setState({ dragging: false });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n        \r\n        return (\r\n            <div ref={(c) => {this.sourceElem = c;}}>\r\n                {content}                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}