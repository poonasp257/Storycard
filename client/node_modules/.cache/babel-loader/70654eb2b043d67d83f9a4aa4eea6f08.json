{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.buildCustomEvent = (eventName, extraData = {}) => {\n      let e;\n\n      if (typeof window.CustomEvent !== 'function') {\n        // we are in IE 11 and must use old-style method of creating event\n        e = document.createEvent('CustomEvent');\n        e.initCustomEvent(eventName, true, true, {});\n      } else {\n        e = new CustomEvent(eventName, {\n          bubbles: true,\n          cancelable: true\n        });\n      } // Add useful data to the event\n\n\n      Object.assign(e, {\n        dragElem: this.dragElem,\n        containerElem: this.containerElem,\n        sourceElem: this.sourceElem\n      }, extraData);\n      return e;\n    };\n\n    this.setCurrentTarget = (x, y) => {\n      const target = document.elementFromPoint(x, y) || document.body;\n      this.dragElem.style.zIndex = this.props.zIndex; // prevent it from selecting itself as the target\n\n      this.currentTarget = this.dragElem.contains(target) ? document.body : target;\n    };\n\n    this.generateEnterLeaveEvents = (x, y) => {\n      this.setCurrentTarget(x, y);\n\n      if (this.currentTarget !== this.prevTarget) {\n        if (this.prevTarget) {\n          this.prevTarget.dispatchEvent(this.buildCustomEvent(\"DragLeave\"));\n        }\n\n        if (this.currentTarget) {\n          this.currentTarget.dispatchEvent(this.buildCustomEvent(\"DragEnter\"));\n        }\n      }\n\n      this.prevTarget = this.currentTarget;\n    };\n\n    this.generateDropEvent = (x, y) => {\n      // generate a drop event in whatever we're currently dragging over\n      this.setCurrentTarget(x, y);\n      const customEvent = this.buildCustomEvent(\"Drop\", {\n        x,\n        y\n      });\n      this.currentTarget.dispatchEvent(customEvent);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (clientX, clientY) => {\n      console.log('startDrag');\n      const rect = this.containerElem.getBoundingClientRect();\n      this.setState({\n        clicked: true,\n        leftOffset: rect.left - clientX,\n        topOffset: rect.top - clientY,\n        left: rect.left,\n        top: rect.top\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (!this.props.noDragging) {\n        e.preventDefault();\n\n        if (this.state.clicked) {\n          this.drag(e.clientX, e.clientY);\n          window.getSelection().removeAllRanges();\n        }\n      }\n    };\n\n    this.drag = (x, y) => {\n      console.log('during drag');\n      this.generateEnterLeaveEvents(x, y);\n      const stateChanges = {\n        dragging: true\n      };\n      this.setState(stateChanges);\n    };\n\n    this.handleMouseUp = e => {\n      this.setState({\n        clicked: false\n      });\n\n      if (this.state.dragging) {\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n        this.drop(e.clientX, e.clientY);\n        window.getSelection().removeAllRanges();\n      }\n    };\n\n    this.drop = (clientX, clientY) => {\n      console.log('drop');\n      this.generateDropEvent(clientX, clientY);\n      this.setState({\n        dragging: false\n      });\n    };\n\n    this.state = {\n      leftOffset: 0,\n      topOffset: 0,\n      left: 0,\n      top: 0,\n      clicked: false,\n      dragging: false\n    };\n    this.dragElem = null;\n    this.containerElem = null;\n    this.sourceElem = null;\n    this.containerElem = null;\n    this.currentTarget = null;\n    this.prevTarget = null;\n  }\n\n  componentDidMount() {\n    const imgs = this.containerElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    this.addListeners(this.containerElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    const ghost = React.createElement(\"div\", {\n      ref: c => {\n        this.dragElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, content);\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.containerElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, content), ghost);\n  }\n\n}\n\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  noDragging: false,\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","addListeners","element","addEventListener","handleMouseDown","buildCustomEvent","eventName","extraData","window","CustomEvent","document","createEvent","initCustomEvent","bubbles","cancelable","Object","assign","dragElem","containerElem","sourceElem","setCurrentTarget","x","y","target","elementFromPoint","body","style","zIndex","currentTarget","contains","generateEnterLeaveEvents","prevTarget","dispatchEvent","generateDropEvent","customEvent","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","console","log","rect","getBoundingClientRect","setState","clicked","leftOffset","left","topOffset","top","noDragging","preventDefault","state","drag","getSelection","removeAllRanges","stateChanges","dragging","removeEventListener","drop","componentDidMount","imgs","getElementsByTagName","i","length","setAttribute","render","content","children","ghost","c","defaultProps","onDragStart","onDrag","onDragEnd","onDrop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leftOffset: 0,\r\n            topOffset: 0,\r\n            left: 0,\r\n            top: 0,\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.dragElem = null;\r\n        this.containerElem = null;\r\n        this.sourceElem = null;\r\n        this.containerElem = null;\r\n        this.currentTarget = null;\r\n        this.prevTarget = null;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.containerElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n          imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        this.addListeners(this.containerElem);\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n\r\n    buildCustomEvent = (eventName, extraData = {}) => {\r\n        let e;\r\n        if (typeof window.CustomEvent !== 'function') {\r\n          // we are in IE 11 and must use old-style method of creating event\r\n          e = document.createEvent('CustomEvent');\r\n          e.initCustomEvent(eventName, true, true, {});\r\n        } else {\r\n          e = new CustomEvent(eventName, { bubbles: true, cancelable: true });\r\n        }\r\n        // Add useful data to the event\r\n        Object.assign(e, {\r\n          dragElem: this.dragElem,\r\n          containerElem: this.containerElem,\r\n          sourceElem: this.sourceElem,\r\n        }, extraData);\r\n        return e;\r\n    };\r\n\r\n    setCurrentTarget = (x, y) => {\r\n        const target = document.elementFromPoint(x, y) || document.body;\r\n        this.dragElem.style.zIndex = this.props.zIndex;\r\n        // prevent it from selecting itself as the target\r\n        this.currentTarget = this.dragElem.contains(target) ? document.body : target;\r\n    };\r\n\r\n    generateEnterLeaveEvents = (x, y) => {\r\n        this.setCurrentTarget(x, y);\r\n        if (this.currentTarget !== this.prevTarget) {\r\n            if (this.prevTarget) { this.prevTarget.dispatchEvent(this.buildCustomEvent(`DragLeave`)); }\r\n            if (this.currentTarget) { this.currentTarget.dispatchEvent(this.buildCustomEvent(`DragEnter`)); }\r\n        }\r\n        this.prevTarget = this.currentTarget;\r\n    };\r\n\r\n    generateDropEvent = (x, y) => {\r\n        // generate a drop event in whatever we're currently dragging over\r\n        this.setCurrentTarget(x, y);\r\n        const customEvent = this.buildCustomEvent(`Drop`, { x, y });\r\n        this.currentTarget.dispatchEvent(customEvent);\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (clientX, clientY) => {\r\n        console.log('startDrag')\r\n        const rect = this.containerElem.getBoundingClientRect();\r\n        this.setState({\r\n            clicked: true,\r\n            leftOffset: rect.left - clientX,\r\n            topOffset: rect.top - clientY,\r\n            left: rect.left,\r\n            top: rect.top,\r\n        });\r\n    } \r\n\r\n    handleMouseMove = (e) => {\r\n        if (!this.props.noDragging) {            \r\n            e.preventDefault();\r\n            if (this.state.clicked) {\r\n              this.drag(e.clientX, e.clientY);\r\n              window.getSelection().removeAllRanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    drag = (x, y) => {\r\n        console.log('during drag')\r\n        this.generateEnterLeaveEvents(x, y);\r\n        const stateChanges = { dragging: true };        \r\n        this.setState(stateChanges);\r\n    };\r\n\r\n    handleMouseUp = (e) => {\r\n        this.setState({ clicked: false });\r\n        if (this.state.dragging) {\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            this.drop(e.clientX, e.clientY);\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n    }\r\n\r\n    drop = (clientX, clientY) => {\r\n        console.log('drop')\r\n        this.generateDropEvent(clientX, clientY);\r\n        this.setState({ dragging: false });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n        const ghost = (\r\n            <div ref={(c) => { this.dragElem = c; }}>\r\n                {content}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div ref={(c) => {this.containerElem = c;}}>\r\n                <span ref={(c) => { this.sourceElem = c; }}>\r\n                    {content}                    \r\n                </span>\r\n                {ghost}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    noDragging: false,\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}