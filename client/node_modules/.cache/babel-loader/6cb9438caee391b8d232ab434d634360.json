{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nfunction getFixedOffset() {\n  // When browser window is zoomed, IOS browsers will offset \"location:fixed\" component coordinates\n  // from the actual window coordinates\n  let fixedElem = document.createElement('div');\n  fixedElem.style.cssText = 'position:fixed; top: 0; left: 0';\n  document.body.appendChild(fixedElem);\n  const rect = fixedElem.getBoundingClientRect();\n  document.body.removeChild(fixedElem);\n  return [rect.left, rect.top];\n}\n\nfunction isZoomed() {\n  // somewhat arbitrary figure to decide whether we need to use getFixedOffset (above) or not\n  return Math.abs(1 - document.body.clientWidth / window.innerWidth) > 0.02;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setFixedOffset = () => {\n      if (isZoomed()) {\n        var _getFixedOffset = getFixedOffset();\n\n        var _getFixedOffset2 = _slicedToArray(_getFixedOffset, 2);\n\n        this.fixedOffsetLeft = _getFixedOffset2[0];\n        this.fixedOffsetTop = _getFixedOffset2[1];\n      }\n    };\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (x, y) => {\n      const fixedX = x - this.state.offsetX;\n      const fixedY = y - this.state.offsetY;\n      this.dragElem = this.sourceElem.cloneNode(true);\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(fixedX, \"px;\\n            top: \").concat(fixedY, \"px;\\n        \"));\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (this.state.clicked) {\n        window.getSelection().removeAllRanges();\n        this.moveDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      const fixedX = x - this.state.offsetX;\n      const fixedY = y - this.state.offsetY;\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(fixedX, \"px;\\n            top: \").concat(fixedY, \"px;\\n        \"));\n      console.log(this.dragElem.style.left + ' : ' + this.dragElem.style.top);\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', this.handleMouseMove);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n      window.getSelection().removeAllRanges();\n      this.endDrag(e.clientX, e.clientY);\n    };\n\n    this.endDrag = (x, y) => {\n      const fixedX = x - this.state.offsetX;\n      const fixedY = y - this.state.offsetY;\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(fixedX, \"px;\\n            top: \").concat(fixedY, \"px;\\n        \"));\n      console.log(this.dragElem.style.left + ' : ' + this.dragElem.style.top);\n      document.body.removeChild(this.dragElem);\n      this.setState({\n        clicked: false,\n        dragging: false\n      });\n      this.props.setContainer(this.dragElem);\n    };\n\n    this.state = {\n      offsetX: 0,\n      offsetY: 0,\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    const rect = this.sourceElem.getBoundingClientRect();\n    this.setState({\n      offsetX: rect.width * 0.5,\n      offsetY: rect.height * 0.5\n    });\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","usesLeftButton","e","button","buttons","which","getFixedOffset","fixedElem","document","createElement","style","cssText","body","appendChild","rect","getBoundingClientRect","removeChild","left","top","isZoomed","Math","abs","clientWidth","window","innerWidth","Draggable","constructor","props","setFixedOffset","fixedOffsetLeft","fixedOffsetTop","addListeners","element","addEventListener","handleMouseDown","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","x","y","fixedX","state","offsetX","fixedY","offsetY","dragElem","sourceElem","cloneNode","setAttribute","setState","clicked","getSelection","removeAllRanges","moveDrag","console","log","dragging","preventDefault","removeEventListener","endDrag","setContainer","componentDidMount","imgs","getElementsByTagName","i","length","width","height","render","content","children","c","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nfunction getFixedOffset() {\r\n    // When browser window is zoomed, IOS browsers will offset \"location:fixed\" component coordinates\r\n    // from the actual window coordinates\r\n    let fixedElem = document.createElement('div');\r\n    fixedElem.style.cssText = 'position:fixed; top: 0; left: 0';\r\n    document.body.appendChild(fixedElem);\r\n    const rect = fixedElem.getBoundingClientRect();\r\n    document.body.removeChild(fixedElem);\r\n    return [rect.left, rect.top];\r\n}\r\n\r\nfunction isZoomed() {\r\n    // somewhat arbitrary figure to decide whether we need to use getFixedOffset (above) or not\r\n    return Math.abs(1 - (document.body.clientWidth / window.innerWidth)) > 0.02;\r\n}\r\n\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n            imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        const rect = this.sourceElem.getBoundingClientRect();\r\n        this.setState({\r\n            offsetX: rect.width * 0.5,\r\n            offsetY: rect.height * 0.5\r\n        });\r\n\r\n        this.addListeners(this.sourceElem);\r\n\r\n    }\r\n\r\n    setFixedOffset = () => {\r\n        if (isZoomed()) {\r\n            [this.fixedOffsetLeft, this.fixedOffsetTop] = getFixedOffset();\r\n        }\r\n    };\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n    \r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {           \r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (x, y) => {\r\n        const fixedX = x - this.state.offsetX;\r\n        const fixedY = y - this.state.offsetY;\r\n        \r\n        this.dragElem = this.sourceElem.cloneNode(true);\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${fixedX}px;\r\n            top: ${fixedY}px;\r\n        `);\r\n        \r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    } \r\n\r\n    handleMouseMove = (e) => {\r\n        if (this.state.clicked) {\r\n            window.getSelection().removeAllRanges();\r\n            this.moveDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {\r\n        const fixedX = x - this.state.offsetX;\r\n        const fixedY = y - this.state.offsetY;\r\n\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${fixedX}px;\r\n            top: ${fixedY}px;\r\n        `);\r\n        console.log(this.dragElem.style.left + ' : ' + this.dragElem.style.top)\r\n        \r\n        this.setState({dragging: true});        \r\n    } \r\n\r\n    handleMouseUp = (e) => {\r\n            e.preventDefault();\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            window.getSelection().removeAllRanges();\r\n            this.endDrag(e.clientX, e.clientY);\r\n    }\r\n\r\n    endDrag = (x ,y) => {\r\n        const fixedX = x - this.state.offsetX;\r\n        const fixedY = y - this.state.offsetY;\r\n\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${fixedX}px;\r\n            top: ${fixedY}px;\r\n        `);\r\n\r\n        console.log(this.dragElem.style.left + ' : ' + this.dragElem.style.top)\r\n        \r\n        document.body.removeChild(this.dragElem);\r\n        this.setState({ \r\n            clicked: false,\r\n            dragging: false\r\n        });\r\n        this.props.setContainer(this.dragElem);\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n\r\n        return (\r\n            <div ref={(c) => {this.sourceElem = c;}}>\r\n                {content}         \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}