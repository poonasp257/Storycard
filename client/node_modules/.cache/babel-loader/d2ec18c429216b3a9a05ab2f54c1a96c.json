{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\PostIt.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 200px;\\n    height: 200px;\\n    border: solid;\\n    border-width: 1px;\\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\\n    background-color: #BAECFF;\\n    font-size: 1.5em;\\n    resize: none;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Draggable from './Draggable';\nconst Content = styled.textarea(_templateObject());\n\nclass PostIt extends Component {\n  constructor(props) {\n    super(props);\n\n    this.OnKeyDown = e => {\n      ++this.maxLength;\n    };\n\n    this.OnChange = e => {\n      this.items = this.props.items;\n\n      for (let item of this.items) {\n        if (item.id !== e.target.closest('div').id) continue;\n        let texts = item.getElementsByTagName('TEXTAREA');\n\n        for (let text of texts) {\n          text.value = e.target.value;\n          text.innerHTML = e.target.value;\n          console.log(text.value.length);\n        }\n      }\n\n      this.props.setItems(this.items);\n    };\n\n    this.items = null;\n    this.maxLength = 0;\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.items = nextProps.items;\n  }\n\n  componentDidUpdate() {\n    const board = document.getElementsByClassName('board');\n    const texts = board[0].getElementsByTagName('textarea');\n\n    for (let text of texts) {\n      text.removeAttribute('readOnly');\n      text.addEventListener('keydown', this.OnKeyDown);\n      text.addEventListener('change', this.OnChange);\n    }\n  }\n\n  render() {\n    return React.createElement(Draggable, {\n      tag: \"board\",\n      addItem: this.props.addItem,\n      customEvent: this.OnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Content, {\n      readOnly: true,\n      onChange: this.OnChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default PostIt;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\PostIt.js"],"names":["React","Component","styled","Draggable","Content","textarea","PostIt","constructor","props","OnKeyDown","e","maxLength","OnChange","items","item","id","target","closest","texts","getElementsByTagName","text","value","innerHTML","console","log","length","setItems","componentWillReceiveProps","nextProps","componentDidUpdate","board","document","getElementsByClassName","removeAttribute","addEventListener","render","addItem"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,QAAV,mBAAb;;AAWA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC3BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,SAtBmB,GAsBNC,CAAD,IAAO;AACf,QAAE,KAAKC,SAAP;AACH,KAxBkB;;AAAA,SA0BnBC,QA1BmB,GA0BPF,CAAD,IAAO;AACd,WAAKG,KAAL,GAAa,KAAKL,KAAL,CAAWK,KAAxB;;AACA,WAAI,IAAIC,IAAR,IAAgB,KAAKD,KAArB,EAA4B;AACxB,YAAGC,IAAI,CAACC,EAAL,KAAYL,CAAC,CAACM,MAAF,CAASC,OAAT,CAAiB,KAAjB,EAAwBF,EAAvC,EAA2C;AAE3C,YAAIG,KAAK,GAAGJ,IAAI,CAACK,oBAAL,CAA0B,UAA1B,CAAZ;;AACA,aAAI,IAAIC,IAAR,IAAgBF,KAAhB,EAAuB;AACnBE,UAAAA,IAAI,CAACC,KAAL,GAAaX,CAAC,CAACM,MAAF,CAASK,KAAtB;AACAD,UAAAA,IAAI,CAACE,SAAL,GAAiBZ,CAAC,CAACM,MAAF,CAASK,KAA1B;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,KAAL,CAAWI,MAAvB;AACH;AACJ;;AAED,WAAKjB,KAAL,CAAWkB,QAAX,CAAoB,KAAKb,KAAzB;AACH,KAxCkB;;AAGf,SAAKA,KAAL,GAAa,IAAb;AACA,SAAKF,SAAL,GAAiB,CAAjB;AACH;;AAEDgB,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACjC,SAAKf,KAAL,GAAae,SAAS,CAACf,KAAvB;AACH;;AAEDgB,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,CAAd;AACA,UAAMd,KAAK,GAAGY,KAAK,CAAC,CAAD,CAAL,CAASX,oBAAT,CAA8B,UAA9B,CAAd;;AAEA,SAAI,IAAIC,IAAR,IAAgBF,KAAhB,EAAuB;AACnBE,MAAAA,IAAI,CAACa,eAAL,CAAqB,UAArB;AACAb,MAAAA,IAAI,CAACc,gBAAL,CAAsB,SAAtB,EAAiC,KAAKzB,SAAtC;AACAW,MAAAA,IAAI,CAACc,gBAAL,CAAsB,QAAtB,EAAgC,KAAKtB,QAArC;AACH;AACJ;;AAsBDuB,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAE,KAAK3B,KAAL,CAAW4B,OAA3C;AAAoD,MAAA,WAAW,EAAE,KAAKxB,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAS,MAAA,QAAQ,MAAjB;AAAkB,MAAA,QAAQ,EAAE,KAAKA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ;AAOH;;AAnD0B;;AAsD/B,eAAeN,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Draggable from './Draggable';\r\n\r\nconst Content = styled.textarea`\r\n    width: 200px;\r\n    height: 200px;\r\n    border: solid;\r\n    border-width: 1px;\r\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\r\n    background-color: #BAECFF;\r\n    font-size: 1.5em;\r\n    resize: none;\r\n`;\r\n\r\nclass PostIt extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.items = null;\r\n        this.maxLength = 0;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.items = nextProps.items;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const board = document.getElementsByClassName('board');\r\n        const texts = board[0].getElementsByTagName('textarea');\r\n\r\n        for(let text of texts) {\r\n            text.removeAttribute('readOnly');\r\n            text.addEventListener('keydown', this.OnKeyDown);\r\n            text.addEventListener('change', this.OnChange);\r\n        }\r\n    }    \r\n\r\n    OnKeyDown = (e) => {\r\n        ++this.maxLength;\r\n    }\r\n\r\n    OnChange = (e) => {\r\n        this.items = this.props.items;\r\n        for(let item of this.items) {\r\n            if(item.id !== e.target.closest('div').id) continue;\r\n\r\n            let texts = item.getElementsByTagName('TEXTAREA');  \r\n            for(let text of texts) {\r\n                text.value = e.target.value;\r\n                text.innerHTML = e.target.value;\r\n                console.log(text.value.length)\r\n            }\r\n        }\r\n\r\n        this.props.setItems(this.items);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Draggable tag=\"board\" addItem={this.props.addItem} customEvent={this.OnChange}>   \r\n                <form>\r\n                    <Content readOnly onChange={this.OnChange} />\r\n                </form>\r\n            </Draggable>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PostIt; "]},"metadata":{},"sourceType":"module"}