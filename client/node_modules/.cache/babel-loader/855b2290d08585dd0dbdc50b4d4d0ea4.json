{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      });\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        console.log('down');\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (clientX, clientY) => {\n      this.dragElem = this.sourceElem.cloneNode(true);\n      const rect = this.sourceElem.getBoundingClientRect();\n      const offsetX = clientX - rect.width / 2;\n      const offsetY = clientY - rect.height / 2;\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(offsetX, \"px;\\n            top: \").concat(offsetY, \"px;\\n            border: solid;\\n        \"));\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      e.preventDefault();\n\n      if (this.state.clicked) {\n        this.moveDrag(e.clientX, e.clientY);\n        window.getSelection().removeAllRanges();\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      this.setState({\n        clicked: false\n      });\n\n      if (this.state.dragging) {\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n        this.endDrag(e.clientX, e.clientY);\n        window.getSelection().removeAllRanges();\n      }\n    };\n\n    this.endDrag = (x, y) => {\n      document.body.removeChild(this.dragElem);\n    };\n\n    this.state = {\n      leftOffset: 0,\n      topOffset: 0,\n      left: 0,\n      top: 0,\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.currentTarget = null;\n    this.prevTarget = null;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;\n/*\r\n\r\n    setCurrentTarget = (x, y) => {\r\n        const target = document.elementFromPoint(x, y) || document.body;\r\n        this.dragElem.style.zIndex = this.props.zIndex;\r\n        // prevent it from selecting itself as the target\r\n        this.currentTarget = this.dragElem.contains(target) ? document.body : target;\r\n    };\r\n\r\n    \r\n\r\n    drag = (x, y) => {     \r\n        \r\n    };\r\n\r\n    drop = (clientX, clientY) => {\r\n        this.setState({ dragging: false });\r\n    }\r\n*/","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","styled","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","addListeners","element","addEventListener","handleMouseDown","console","log","document","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","dragElem","sourceElem","cloneNode","rect","getBoundingClientRect","offsetX","width","offsetY","height","setAttribute","body","appendChild","setState","clicked","preventDefault","state","moveDrag","window","getSelection","removeAllRanges","x","y","dragging","removeEventListener","endDrag","removeChild","leftOffset","topOffset","left","top","currentTarget","prevTarget","componentDidMount","imgs","getElementsByTagName","i","length","render","content","children","c","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leftOffset: 0,\r\n            topOffset: 0,\r\n            left: 0,\r\n            top: 0,\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.currentTarget = null;\r\n        this.prevTarget = null;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n          imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        this.addListeners(this.sourceElem);\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); });\r\n    };\r\n\r\n\r\n\r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {\r\n            console.log('down');            \r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (clientX, clientY) => {\r\n        this.dragElem = this.sourceElem.cloneNode(true);\r\n        const rect = this.sourceElem.getBoundingClientRect();\r\n        const offsetX = clientX - (rect.width / 2);\r\n        const offsetY = clientY - (rect.height / 2);\r\n        \r\n\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${offsetX}px;\r\n            top: ${offsetY}px;\r\n            border: solid;\r\n        `);\r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    } \r\n\r\n    handleMouseMove = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.clicked) {\r\n            this.moveDrag(e.clientX, e.clientY);\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {\r\n        this.setState({dragging: true});        \r\n        \r\n        \r\n    } \r\n\r\n    handleMouseUp = (e) => {\r\n        this.setState({ clicked: false });\r\n        if (this.state.dragging) {\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            this.endDrag(e.clientX, e.clientY);\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n    }\r\n\r\n    endDrag = (x ,y) => {\r\n        document.body.removeChild(this.dragElem);\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n        return (\r\n            <div ref={(c) => {this.sourceElem = c;}}>\r\n                {content}                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;\r\n\r\n/*\r\n\r\n    setCurrentTarget = (x, y) => {\r\n        const target = document.elementFromPoint(x, y) || document.body;\r\n        this.dragElem.style.zIndex = this.props.zIndex;\r\n        // prevent it from selecting itself as the target\r\n        this.currentTarget = this.dragElem.contains(target) ? document.body : target;\r\n    };\r\n\r\n    \r\n\r\n    drag = (x, y) => {     \r\n        \r\n    };\r\n\r\n    drop = (clientX, clientY) => {\r\n        this.setState({ dragging: false });\r\n    }\r\n*/"]},"metadata":{},"sourceType":"module"}