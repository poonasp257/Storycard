{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      });\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        console.log('down');\n        this.dragElem = this.sourceElem.cloneNode(true);\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (clientX, clientY) => {\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      e.preventDefault();\n\n      if (this.state.clicked) {\n        this.moveDrag(e.clientX, e.clientY);\n        window.getSelection().removeAllRanges();\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      this.setState({\n        dragging: true\n      });\n      const rect = this.dragElem.getBoundingClientRect();\n      this.dragElem.style.position = \"absolute\";\n      this.dragElem.style.left = \"\".concat(x, \"px\");\n      this.dragElem.style.top = \"\".concat(y, \"px\");\n      console.log('left: ' + this.dragElem.style.left);\n      console.log('top: ' + this.dragElem.style.top);\n    };\n\n    this.handleMouseUp = e => {\n      this.setState({\n        clicked: false\n      });\n\n      if (this.state.dragging) {\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n        this.endDrag(e.clientX, e.clientY);\n        window.getSelection().removeAllRanges();\n      }\n    };\n\n    this.endDrag = (x, y) => {\n      document.body.removeChild(this.dragElem);\n    };\n\n    this.state = {\n      leftOffset: 0,\n      topOffset: 0,\n      left: 0,\n      top: 0,\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.currentTarget = null;\n    this.prevTarget = null;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;\n/*\r\n\r\n    setCurrentTarget = (x, y) => {\r\n        const target = document.elementFromPoint(x, y) || document.body;\r\n        this.dragElem.style.zIndex = this.props.zIndex;\r\n        // prevent it from selecting itself as the target\r\n        this.currentTarget = this.dragElem.contains(target) ? document.body : target;\r\n    };\r\n\r\n    \r\n\r\n    drag = (x, y) => {     \r\n        \r\n    };\r\n\r\n    drop = (clientX, clientY) => {\r\n        this.setState({ dragging: false });\r\n    }\r\n*/","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","styled","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","addListeners","element","addEventListener","handleMouseDown","console","log","dragElem","sourceElem","cloneNode","document","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","body","appendChild","setState","clicked","preventDefault","state","moveDrag","window","getSelection","removeAllRanges","x","y","dragging","rect","getBoundingClientRect","style","position","left","top","removeEventListener","endDrag","removeChild","leftOffset","topOffset","currentTarget","prevTarget","componentDidMount","imgs","getElementsByTagName","i","length","setAttribute","render","content","children","c","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leftOffset: 0,\r\n            topOffset: 0,\r\n            left: 0,\r\n            top: 0,\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.currentTarget = null;\r\n        this.prevTarget = null;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n          imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        this.addListeners(this.sourceElem);\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); });\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {\r\n            console.log('down');            \r\n            this.dragElem = this.sourceElem.cloneNode(true);\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (clientX, clientY) => {\r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    } \r\n\r\n    handleMouseMove = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.clicked) {\r\n            this.moveDrag(e.clientX, e.clientY);\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {\r\n        this.setState({dragging: true});        \r\n        const rect = this.dragElem.getBoundingClientRect();\r\n        this.dragElem.style.position = `absolute`;\r\n        this.dragElem.style.left = `${x}px`;\r\n        this.dragElem.style.top = `${y}px`;\r\n\r\n        console.log('left: '+this.dragElem.style.left)\r\n        console.log('top: '+this.dragElem.style.top)\r\n    } \r\n\r\n    handleMouseUp = (e) => {\r\n        this.setState({ clicked: false });\r\n        if (this.state.dragging) {\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            this.endDrag(e.clientX, e.clientY);\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n    }\r\n\r\n    endDrag = (x ,y) => {\r\n        document.body.removeChild(this.dragElem);\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n        return (\r\n            <div ref={(c) => {this.sourceElem = c;}}>\r\n                {content}                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;\r\n\r\n/*\r\n\r\n    setCurrentTarget = (x, y) => {\r\n        const target = document.elementFromPoint(x, y) || document.body;\r\n        this.dragElem.style.zIndex = this.props.zIndex;\r\n        // prevent it from selecting itself as the target\r\n        this.currentTarget = this.dragElem.contains(target) ? document.body : target;\r\n    };\r\n\r\n    \r\n\r\n    drag = (x, y) => {     \r\n        \r\n    };\r\n\r\n    drop = (clientX, clientY) => {\r\n        this.setState({ dragging: false });\r\n    }\r\n*/"]},"metadata":{},"sourceType":"module"}