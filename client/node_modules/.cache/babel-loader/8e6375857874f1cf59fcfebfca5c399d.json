{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { objectTypeSpreadProperty } from '@babel/types';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fixPositon = (x, y) => {\n      this.fixedX = x - this.offsetX * 0.5;\n      this.fixedY = y - this.offsetY * 0.5;\n      this.dragElem.setAttribute('style', \"\\n        position:absolute;\\n        left: \".concat(this.fixedX, \"px;\\n        top: \").concat(this.fixedY, \"px;\\n        \"));\n    };\n\n    this.GetTarget = tag => {\n      const targets = document.getElementsByClassName(tag);\n      return Object.keys(targets).map(key => {\n        const left = targets[key].style[\"left\"];\n        const top = targets[key].style[\"top\"];\n        const right = parseInt(left) + parseInt(targets[key].style[\"width\"]) + 'px';\n        const bottom = parseInt(top) + parseInt(targets[key].style[\"height\"]) + 'px';\n        return {\n          left: left,\n          top: top,\n          right: right,\n          bottom: bottom\n        };\n      });\n    };\n\n    this.Overlap = (lhs, rhs) => {\n      lhs = {\n        left: parseInt(lhs.left),\n        top: parseInt(lhs.top),\n        right: parseInt(lhs.right),\n        bottom: parseInt(lhs.bottom)\n      };\n      console.log(lhs);\n    };\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (x, y) => {\n      this.dragElem = this.sourceElem.cloneNode(true);\n      this.fixPositon(x, y);\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (this.state.clicked) {\n        window.getSelection().removeAllRanges();\n        this.moveDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      this.fixPositon(x, y);\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', this.handleMouseMove);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n      window.getSelection().removeAllRanges();\n      this.endDrag(e.clientX, e.clientY);\n    };\n\n    this.endDrag = (x, y) => {\n      this.fixPositon(x, y);\n      const targets = this.GetTarget(this.props.tag);\n      const dragRect = this.dragElem.getBoundingClientRect();\n      Object.keys(targets).map(key => {\n        if (this.Overlap(targets[key], dragRect)) console.log('hello');\n      });\n      this.props.setContainer(this.dragElem);\n      document.body.removeChild(this.dragElem);\n      this.setState({\n        clicked: false,\n        dragging: false\n      });\n    };\n\n    this.state = {\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.fixedX = 0;\n    this.fixedY = 0;\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    const rect = this.sourceElem.getBoundingClientRect();\n    this.offsetX = rect.width;\n    this.offsetY = rect.height;\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.propTypes = {\n  tag: PropTypes.string.isRequired\n};\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","ReactDOM","PropTypes","objectTypeSpreadProperty","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","fixPositon","x","y","fixedX","offsetX","fixedY","offsetY","dragElem","setAttribute","GetTarget","tag","targets","document","getElementsByClassName","Object","keys","map","key","left","style","top","right","parseInt","bottom","Overlap","lhs","rhs","console","log","addListeners","element","addEventListener","handleMouseDown","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","sourceElem","cloneNode","body","appendChild","setState","clicked","state","window","getSelection","removeAllRanges","moveDrag","dragging","preventDefault","removeEventListener","endDrag","dragRect","getBoundingClientRect","setContainer","removeChild","componentDidMount","imgs","getElementsByTagName","i","length","rect","width","height","render","content","children","c","propTypes","string","isRequired","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { objectTypeSpreadProperty } from '@babel/types';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.fixedX = 0;\r\n        this.fixedY = 0;\r\n        this.offsetX = 0;\r\n        this.offsetY = 0;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n            imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        const rect = this.sourceElem.getBoundingClientRect();\r\n        this.offsetX = rect.width;\r\n        this.offsetY = rect.height;\r\n        this.addListeners(this.sourceElem);\r\n    }\r\n\r\n    fixPositon = (x, y) => {\r\n        this.fixedX = x - (this.offsetX * 0.5);  \r\n        this.fixedY = y - (this.offsetY * 0.5);\r\n        \r\n        this.dragElem.setAttribute('style', `\r\n        position:absolute;\r\n        left: ${this.fixedX}px;\r\n        top: ${this.fixedY}px;\r\n        `);\r\n    };\r\n\r\n    GetTarget = (tag) => {\r\n        const targets = document.getElementsByClassName(tag);\r\n        return (\r\n            Object.keys(targets).map((key) => {\r\n                const left = targets[key].style[\"left\"];\r\n                const top = targets[key].style[\"top\"];\r\n                const right = parseInt(left) + parseInt(targets[key].style[\"width\"]) + 'px';\r\n                const bottom = parseInt(top) + parseInt(targets[key].style[\"height\"]) + 'px';\r\n\r\n                return ({\r\n                    left: left,\r\n                    top: top,\r\n                    right: right, \r\n                    bottom: bottom,\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    Overlap = (lhs, rhs) => {\r\n        lhs = {\r\n            left: parseInt(lhs.left),\r\n            top: parseInt(lhs.top),\r\n            right: parseInt(lhs.right), \r\n            bottom: parseInt(lhs.bottom),\r\n        }\r\n        console.log(lhs)\r\n\r\n\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n    \r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {   \r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (x, y) => {        \r\n        this.dragElem = this.sourceElem.cloneNode(true);        \r\n        this.fixPositon(x, y);\r\n\r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    } \r\n\r\n    handleMouseMove = (e) => {        \r\n        if (this.state.clicked) {\r\n            window.getSelection().removeAllRanges();\r\n            this.moveDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {       \r\n        this.fixPositon(x, y);        \r\n        this.setState({dragging: true});        \r\n    } \r\n\r\n    handleMouseUp = (e) => {\r\n            e.preventDefault();\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            window.getSelection().removeAllRanges();\r\n            this.endDrag(e.clientX, e.clientY);\r\n    }\r\n\r\n    endDrag = (x ,y) => {\r\n        this.fixPositon(x, y);\r\n\r\n        const targets = this.GetTarget(this.props.tag);\r\n        const dragRect = this.dragElem.getBoundingClientRect();\r\n\r\n        Object.keys(targets).map((key) => {\r\n            if(this.Overlap(targets[key], dragRect)) console.log('hello')\r\n        })\r\n\r\n        this.props.setContainer(this.dragElem);\r\n        document.body.removeChild(this.dragElem);\r\n        this.setState({ \r\n            clicked: false,\r\n            dragging: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n\r\n        return (\r\n            <div ref={(c) => {this.sourceElem = c;}}>\r\n                {content}         \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.propTypes = {\r\n    tag: PropTypes.string.isRequired\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}