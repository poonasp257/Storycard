{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fixPositon = (x, y) => {\n      const rect = this.sourceElem.getBoundingClientRect();\n      this.offsetX = rect.width;\n      this.offsetY = rect.height;\n      this.fixedX = x - this.offsetX * 0.5 + window.scrollX;\n      this.fixedY = y - this.offsetY * 0.5 + window.scrollY;\n      this.dragElem.style[\"left\"] = \"\".concat(this.fixedX, \"px\");\n      this.dragElem.style[\"top\"] = \"\".concat(this.fixedY, \"px\");\n      this.dragElem.style[\"right\"] = \"\".concat(this.fixedX + this.offsetX, \"px\");\n      this.dragElem.style[\"bottom\"] = \"\".concat(this.fixedY + this.offsetY, \"px\");\n    };\n\n    this.GetRects = targets => {\n      return Object.keys(targets).map(key => {\n        const width = parseInt(targets[key].style[\"width\"]);\n        const height = parseInt(targets[key].style[\"height\"]);\n        const left = parseInt(targets[key].style[\"left\"]);\n        const top = parseInt(targets[key].style[\"top\"]);\n        const right = parseInt(left) + width;\n        const bottom = parseInt(top) + height;\n        return {\n          width: width,\n          height: height,\n          left: left,\n          top: top,\n          right: right,\n          bottom: bottom\n        };\n      });\n    };\n\n    this.Overlap = (lhs, rhs) => {\n      rhs.left -= 10;\n      rhs.top -= 10;\n      rhs.right -= 10;\n      rhs.bottom -= 10;\n      console.log(lhs, rhs);\n      return !(lhs.top > rhs.bottom || lhs.right < rhs.left || lhs.bottom < rhs.top || lhs.left > rhs.right);\n      /*       return !(\r\n                 \r\n             );\r\n      */\n    };\n\n    this.IsContaining = (lhs, rhs) => {\n      return lhs.left <= rhs.left && rhs.left <= lhs.left + lhs.width - rhs.width && lhs.top <= rhs.top && rhs.top <= lhs.top + lhs.height - rhs.height;\n    };\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (x, y) => {\n      this.dragElem = this.sourceElem.cloneNode(true);\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            width: \".concat(this.offsetX, \"px;\\n            height: \").concat(this.offsetY, \"px;\\n        \"));\n      this.fixPositon(x, y);\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (this.state.clicked) {\n        window.getSelection().removeAllRanges();\n        this.moveDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      this.fixPositon(x, y);\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', this.handleMouseMove);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n      window.getSelection().removeAllRanges();\n      this.endDrag(e.clientX, e.clientY);\n    };\n\n    this.endDrag = (x, y) => {\n      this.fixPositon(x, y);\n      const targets = document.getElementsByClassName(this.props.tag);\n      const targetRects = this.GetRects(targets);\n      const dragRect = {\n        width: this.offsetX,\n        height: this.offsetY,\n        left: this.fixedX,\n        top: this.fixedY,\n        right: this.fixedX + this.offsetX,\n        bottom: this.fixedY + this.offsetY\n      };\n      Object.keys(targetRects).map(i => {\n        if (this.IsContaining(targetRects[i], dragRect)) {\n          const otherObj = targets[i].getElementsByClassName(\"draggable\");\n          const objRects = this.GetRects(otherObj);\n\n          for (let rect of objRects) {\n            if (this.Overlap(rect, dragRect)) return false;\n          }\n\n          this.props.addItem(this.dragElem);\n        }\n\n        return true;\n      });\n      document.body.removeChild(this.dragElem);\n      this.setState({\n        clicked: false,\n        dragging: false\n      });\n    };\n\n    this.state = {\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.fixedX = 0;\n    this.fixedY = 0;\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    const rect = this.sourceElem.getBoundingClientRect();\n    this.offsetX = rect.width;\n    this.offsetY = rect.height;\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      className: \"draggable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.propTypes = {\n  tag: PropTypes.string.isRequired\n};\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","PropTypes","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","fixPositon","x","y","rect","sourceElem","getBoundingClientRect","offsetX","width","offsetY","height","fixedX","window","scrollX","fixedY","scrollY","dragElem","style","GetRects","targets","Object","keys","map","key","parseInt","left","top","right","bottom","Overlap","lhs","rhs","console","log","IsContaining","addListeners","element","addEventListener","handleMouseDown","document","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","cloneNode","setAttribute","body","appendChild","setState","clicked","state","getSelection","removeAllRanges","moveDrag","dragging","preventDefault","removeEventListener","endDrag","getElementsByClassName","tag","targetRects","dragRect","i","otherObj","objRects","addItem","removeChild","componentDidMount","imgs","getElementsByTagName","length","render","content","children","c","propTypes","string","isRequired","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.fixedX = 0;\r\n        this.fixedY = 0;\r\n        this.offsetX = 0;\r\n        this.offsetY = 0;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n            imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n        \r\n        const rect = this.sourceElem.getBoundingClientRect();\r\n        this.offsetX = rect.width;\r\n        this.offsetY = rect.height;\r\n        this.addListeners(this.sourceElem);\r\n    }\r\n\r\n    fixPositon = (x, y) => {\r\n        const rect = this.sourceElem.getBoundingClientRect();\r\n        this.offsetX = rect.width;\r\n        this.offsetY = rect.height;        \r\n        this.fixedX = x - (this.offsetX * 0.5) + window.scrollX;\r\n        this.fixedY = y - (this.offsetY * 0.5) + window.scrollY;\r\n\r\n        this.dragElem.style[\"left\"] = `${this.fixedX}px`;\r\n        this.dragElem.style[\"top\"] = `${this.fixedY}px`;\r\n        this.dragElem.style[\"right\"] = `${this.fixedX + this.offsetX}px`;\r\n        this.dragElem.style[\"bottom\"] = `${this.fixedY + this.offsetY}px`;\r\n    };\r\n\r\n    GetRects = (targets) => {\r\n        return (\r\n            Object.keys(targets).map((key) => {\r\n                const width = parseInt(targets[key].style[\"width\"]);\r\n                const height = parseInt(targets[key].style[\"height\"]);\r\n                const left = parseInt(targets[key].style[\"left\"]);\r\n                const top = parseInt(targets[key].style[\"top\"]);\r\n                const right = parseInt(left) + width;\r\n                const bottom = parseInt(top) + height;\r\n\r\n                return ({\r\n                    width: width,\r\n                    height: height,\r\n                    left: left,\r\n                    top: top,\r\n                    right: right,\r\n                    bottom: bottom,\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    Overlap = (lhs, rhs) => {\r\n        rhs.left -= 10;\r\n        rhs.top -= 10;\r\n        rhs.right -= 10;\r\n        rhs.bottom -= 10; \r\n\r\n        console.log(lhs, rhs)\r\n\r\n        return !(\r\n            lhs.top > rhs.bottom || lhs.right < rhs.left ||\r\n            lhs.bottom < rhs.top || lhs.left > rhs.right\r\n        );\r\n\r\n /*       return !(\r\n            \r\n        );\r\n */\r\n    }\r\n\r\n    IsContaining = (lhs, rhs) => {\r\n        return (\r\n            lhs.left <= rhs.left &&\r\n            rhs.left <= lhs.left + lhs.width - rhs.width &&\r\n            lhs.top <= rhs.top &&\r\n            rhs.top <= lhs.top + lhs.height - rhs.height\r\n        );\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        if (usesLeftButton(e)) {\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (x, y) => {\r\n        this.dragElem = this.sourceElem.cloneNode(true);        \r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            width: ${this.offsetX}px;\r\n            height: ${this.offsetY}px;\r\n        `);\r\n        this.fixPositon(x, y);        \r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    }\r\n\r\n    handleMouseMove = (e) => {\r\n        if (this.state.clicked) {\r\n            window.getSelection().removeAllRanges();\r\n            this.moveDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {\r\n        this.fixPositon(x, y);\r\n        this.setState({ dragging: true });\r\n    }\r\n\r\n    handleMouseUp = (e) => {\r\n        e.preventDefault();\r\n        document.removeEventListener('mousemove', this.handleMouseMove);\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n        window.getSelection().removeAllRanges();\r\n        this.endDrag(e.clientX, e.clientY);\r\n    }\r\n\r\n    endDrag = (x, y) => {\r\n        this.fixPositon(x, y);\r\n\r\n        const targets = document.getElementsByClassName(this.props.tag);\r\n        const targetRects = this.GetRects(targets);\r\n        const dragRect = {\r\n            width: this.offsetX,\r\n            height: this.offsetY,\r\n            left: this.fixedX,\r\n            top: this.fixedY,\r\n            right: this.fixedX + this.offsetX,\r\n            bottom: this.fixedY + this.offsetY\r\n        };\r\n\r\n        Object.keys(targetRects).map((i) => {\r\n            if (this.IsContaining(targetRects[i], dragRect)) {\r\n                const otherObj = targets[i].getElementsByClassName(\"draggable\");\r\n                const objRects = this.GetRects(otherObj);\r\n                \r\n                for(let rect of objRects) {\r\n                    if(this.Overlap(rect, dragRect)) return false;\r\n                }\r\n\r\n                this.props.addItem(this.dragElem);\r\n            }\r\n\r\n            return true;\r\n        });\r\n        \r\n        document.body.removeChild(this.dragElem);\r\n        this.setState({\r\n            clicked: false,\r\n            dragging: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n        return (\r\n            <div ref={(c) => { this.sourceElem = c; }} className=\"draggable\">\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.propTypes = {\r\n    tag: PropTypes.string.isRequired\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => { },\r\n    onDrag: () => { },\r\n    onDragEnd: () => { },\r\n    onDrop: () => { },\r\n    render: null,\r\n    zIndex: 1000,\r\n};\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}