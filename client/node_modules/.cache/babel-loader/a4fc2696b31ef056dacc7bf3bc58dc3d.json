{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Board.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    float: left;\\n    line-height: 0px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 50px;\\n    left: 50px;\\n    width: \", \";\\n    height: \", \";\\n    border: solid;\\n    border-width: 2px;\\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport tileImg from '../resources/tile.jpg';\nimport DropZone from './DropZone';\nconst Main = styled.div(_templateObject(), props => props.width, props => props.height);\nconst Background = styled.div(_templateObject2());\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      background: [],\n      width: 0,\n      height: 0\n    };\n\n    this.ConvertToHTML = elements => {\n      let html = '';\n      elements.map(element => {\n        return html += element.outerHTML;\n      });\n      return html;\n    };\n\n    this.GetObjects = async () => {\n      const objects = await this.CallApi(); //this.props.setContainer(objects);\n    };\n\n    this.CallApi = () => {};\n  }\n\n  componentWillMount() {\n    const offsetW = 50;\n    const offsetH = 50;\n    const row = this.props.row;\n    const col = this.props.col;\n    this.setState({\n      background: [...this.state.background, React.createElement(Tile, {\n        width: offsetW,\n        height: offsetH,\n        row: row,\n        col: col,\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })],\n      width: col * offsetW,\n      height: row * offsetH\n    });\n    this.GetObjects();\n  }\n\n  render() {\n    const boardWidth = this.state.width + 'px';\n    const boardHeight = this.state.height + 'px';\n    let items = this.ConvertToHTML(this.props.container);\n    const rect = [50, 50, 1000, 750];\n    return React.createElement(DropZone, {\n      tag: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Main, {\n      width: boardWidth,\n      height: boardHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.background), React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: items\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Tile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tiles: [],\n      offsetWidth: this.props.width,\n      offsetHeihgt: this.props.height,\n      row: this.props.row,\n      col: this.props.col\n    };\n\n    this.CreateTile = () => {\n      let temp = [];\n      const offsetW = this.state.offsetWidth;\n      const offsetH = this.state.offsetHeihgt;\n      const size = this.state.row * this.state.col;\n\n      for (let i = 0; i < size; ++i) {\n        temp.push(React.createElement(\"img\", {\n          src: tileImg,\n          width: offsetW,\n          height: offsetH,\n          key: i,\n          alt: \"tile\",\n          draggable: \"false\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        tiles: temp\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.CreateTile();\n  }\n\n  render() {\n    return React.createElement(Background, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.tiles);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Board.js"],"names":["React","Component","styled","tileImg","DropZone","Main","div","props","width","height","Background","Board","state","background","ConvertToHTML","elements","html","map","element","outerHTML","GetObjects","objects","CallApi","componentWillMount","offsetW","offsetH","row","col","setState","render","boardWidth","boardHeight","items","container","rect","__html","Tile","tiles","offsetWidth","offsetHeihgt","CreateTile","temp","size","i","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\nimport tileImg from '../resources/tile.jpg'\r\nimport DropZone from './DropZone';\r\n\r\nconst Main = styled.div`\r\n    position: absolute;\r\n    top: 50px;\r\n    left: 50px;\r\n    width: ${props => props.width};\r\n    height: ${props => props.height};\r\n    border: solid;\r\n    border-width: 2px;\r\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Background = styled.div`\r\n    float: left;\r\n    line-height: 0px;\r\n`;\r\n\r\nclass Board extends Component {\r\n    state = {\r\n        background: [],\r\n        width: 0,\r\n        height: 0,        \r\n    }\r\n\r\n    componentWillMount() {        \r\n        const offsetW = 50;\r\n        const offsetH = 50;\r\n        const row = this.props.row;\r\n        const col = this.props.col;\r\n\r\n        this.setState({\r\n            background: [\r\n                ...this.state.background,\r\n                <Tile width={offsetW} height={offsetH} row={row} col={col} key={0}/> \r\n            ],\r\n            width: col * offsetW,\r\n            height: row * offsetH,\r\n        });\r\n        \r\n        this.GetObjects();\r\n    }\r\n     \r\n    ConvertToHTML = (elements) => {\r\n        let html = '';\r\n        elements.map((element) => {\r\n            return (\r\n                html += element.outerHTML);\r\n        })\r\n\r\n        return html;\r\n    }\r\n\r\n    GetObjects = async () => {\r\n        const objects = await this.CallApi();\r\n        //this.props.setContainer(objects);\r\n    }\r\n\r\n    CallApi = () => {\r\n    }\r\n\r\n    render() {\r\n        const boardWidth = this.state.width + 'px';\r\n        const boardHeight = this.state.height + 'px';\r\n\r\n        let items = this.ConvertToHTML(this.props.container);\r\n        \r\n        const rect  = [ 50, 50, 1000, 750];\r\n\r\n        return (  \r\n            <DropZone tag=\"board\">\r\n                <Main width={boardWidth} height={boardHeight}>\r\n                    {this.state.background}\r\n                </Main>\r\n                <div dangerouslySetInnerHTML={{ __html: items }} />\r\n            </DropZone>\r\n        );\r\n    }\r\n}\r\n\r\nclass Tile extends Component {\r\n    state = {\r\n        tiles: [],\r\n        offsetWidth: this.props.width,\r\n        offsetHeihgt: this.props.height,\r\n        row: this.props.row,\r\n        col: this.props.col\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.CreateTile();\r\n    }\r\n\r\n    CreateTile = () => {\r\n        let temp = [];\r\n        const offsetW  = this.state.offsetWidth;\r\n        const offsetH  = this.state.offsetHeihgt; \r\n        const size = this.state.row * this.state.col;\r\n\r\n        for(let i = 0; i < size; ++i) {\r\n            temp.push(<img src={tileImg} width={offsetW} height={offsetH} key={i} alt=\"tile\" draggable=\"false\" />);\r\n        }\r\n        this.setState({ tiles: temp });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Background>\r\n                {this.state.tiles}\r\n            </Background>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board; "]},"metadata":{},"sourceType":"module"}