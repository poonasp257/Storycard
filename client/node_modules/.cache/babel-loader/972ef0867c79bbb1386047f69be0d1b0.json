{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (clientX, clientY) => {\n      console.log('startDrag');\n      const rect = this.containerElem.getBoundingClientRect();\n      this.setState({\n        clicked: true,\n        leftOffset: rect.left - clientX,\n        topOffset: rect.top - clientY,\n        left: rect.left,\n        top: rect.top\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (!this.props.noDragging) {\n        e.preventDefault();\n\n        if (this.state.clicked) {\n          this.drag(e.clientX, e.clientY);\n          window.getSelection().removeAllRanges();\n        }\n      }\n    };\n\n    this.drag = (x, y) => {\n      console.log('during drag'); //this.generateEnterLeaveEvents(x, y);\n\n      const stateChanges = {\n        dragging: true\n      };\n      this.setState(stateChanges); //this.props.onDrag(this.props.dragData, this.currentTarget, x, y);\n    };\n\n    this.handleMouseUp = e => {\n      this.setState({\n        clicked: false\n      });\n\n      if (this.state.dragging) {\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n        this.drop(e.clientX, e.clientY);\n        window.getSelection().removeAllRanges();\n      }\n    };\n\n    this.drop = (clientX, clientY) => {\n      console.log('drop');\n      this.setState({\n        dragging: false\n      });\n    };\n\n    this.state = {\n      leftOffset: 0,\n      topOffset: 0,\n      left: 0,\n      top: 0,\n      clicked: false,\n      dragging: false\n    };\n    this.containerElem = null;\n  }\n\n  componentDidMount() {\n    const imgs = this.containerElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    this.addListeners(this.containerElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.containerElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  noDragging: false,\n  render: null\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","addListeners","element","addEventListener","handleMouseDown","document","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","console","log","rect","containerElem","getBoundingClientRect","setState","clicked","leftOffset","left","topOffset","top","noDragging","preventDefault","state","drag","window","getSelection","removeAllRanges","x","y","stateChanges","dragging","removeEventListener","drop","componentDidMount","imgs","getElementsByTagName","i","length","setAttribute","render","content","children","c","defaultProps","onDragStart","onDrag","onDragEnd","onDrop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leftOffset: 0,\r\n            topOffset: 0,\r\n            left: 0,\r\n            top: 0,\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n        \r\n        this.containerElem = null;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.containerElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n          imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        this.addListeners(this.containerElem);\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (clientX, clientY) => {\r\n        console.log('startDrag')\r\n        const rect = this.containerElem.getBoundingClientRect();\r\n        this.setState({\r\n            clicked: true,\r\n            leftOffset: rect.left - clientX,\r\n            topOffset: rect.top - clientY,\r\n            left: rect.left,\r\n            top: rect.top,\r\n        });\r\n    } \r\n\r\n    handleMouseMove = (e) => {\r\n        if (!this.props.noDragging) {            \r\n            e.preventDefault();\r\n            if (this.state.clicked) {\r\n              this.drag(e.clientX, e.clientY);\r\n              window.getSelection().removeAllRanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    drag = (x, y) => {\r\n        console.log('during drag')\r\n        //this.generateEnterLeaveEvents(x, y);\r\n        const stateChanges = { dragging: true };\r\n        \r\n        this.setState(stateChanges);\r\n        //this.props.onDrag(this.props.dragData, this.currentTarget, x, y);\r\n    };\r\n\r\n    handleMouseUp = (e) => {\r\n        this.setState({ clicked: false });\r\n        if (this.state.dragging) {\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            this.drop(e.clientX, e.clientY);\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n    }\r\n\r\n    drop = (clientX, clientY) => {\r\n        console.log('drop')\r\n        this.setState({ dragging: false });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n\r\n        return (\r\n            <div ref={(c) => {this.containerElem = c;}}>\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    noDragging: false,\r\n    render: null,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}