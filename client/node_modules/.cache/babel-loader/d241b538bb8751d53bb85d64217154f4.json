{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Board.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    float: left;\\n    line-height: 0px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    position: relative;\\n    top: \", \"px;\\n    left: \", \"px;\\n    width: \", \"px;\\n    height: \", \"px;\\n    border: solid;\\n    border-width: 2px;\\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport tileImg from '../resources/tile.jpg';\nimport DropZone from './DropZone';\nconst Main = styled.div(_templateObject(), props => props.rect.top, props => props.rect.left, props => props.rect.width, props => props.rect.height);\nconst Tile = styled.div(_templateObject2());\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n\n    this.ConvertToHTML = elements => {\n      let html = '';\n      elements.map(element => {\n        return html += element.outerHTML;\n      });\n      return html;\n    };\n\n    this.GetObjects = async () => {//const objects = await this.CallApi();\n      //this.props.setContainer(objects);\n    };\n\n    this.CallApi = () => {};\n\n    this.state = {\n      background: null,\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  componentWillMount() {\n    console.log('willmount');\n    const offsetW = 50;\n    const offsetH = 50;\n    const row = this.props.row;\n    const col = this.props.col;\n    this.setState({\n      background: React.createElement(Tile, {\n        width: offsetW,\n        height: offsetH,\n        row: row,\n        col: col,\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }),\n      width: col * offsetW,\n      height: row * offsetH\n    });\n    this.GetObjects();\n  }\n\n  render() {\n    console.log('render');\n    let items = this.ConvertToHTML(this.props.items);\n    const rect = {\n      left: 50,\n      top: 50,\n      width: this.state.width,\n      height: this.state.height\n    };\n    return React.createElement(DropZone, {\n      tag: \"board\",\n      rect: rect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Main, {\n      rect: rect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.background), React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: items\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nclass Tiles extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.CreateTile = () => {\n      let temp = [];\n      const offsetW = this.state.offsetWidth;\n      const offsetH = this.state.offsetHeihgt;\n      const size = this.state.row * this.state.col;\n\n      for (let i = 0; i < size; ++i) {\n        temp.push(React.createElement(\"img\", {\n          src: tileImg,\n          width: offsetW,\n          height: offsetH,\n          key: i,\n          alt: \"tile\",\n          draggable: \"false\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        tiles: temp\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Background, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.tiles);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Board.js"],"names":["React","Component","styled","tileImg","DropZone","Main","div","props","rect","top","left","width","height","Tile","Board","constructor","ConvertToHTML","elements","html","map","element","outerHTML","GetObjects","CallApi","state","background","componentWillMount","console","log","offsetW","offsetH","row","col","setState","render","items","__html","Tiles","CreateTile","temp","offsetWidth","offsetHeihgt","size","i","push","tiles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport tileImg from '../resources/tile.jpg';\r\nimport DropZone from './DropZone';\r\n\r\nconst Main = styled.div`\r\n    position: relative;\r\n    top: ${props => props.rect.top}px;\r\n    left: ${props => props.rect.left}px;\r\n    width: ${props => props.rect.width}px;\r\n    height: ${props => props.rect.height}px;\r\n    border: solid;\r\n    border-width: 2px;\r\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Tile = styled.div`\r\n    float: left;\r\n    line-height: 0px;\r\n`;\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state= {\r\n            background: null,\r\n            left: 0,\r\n            top: 0,\r\n            width: 0,\r\n            height: 0,\r\n        }\r\n    }\r\n\r\n    componentWillMount() {        \r\n        console.log('willmount');\r\n        const offsetW = 50;\r\n        const offsetH = 50;\r\n        const row = this.props.row;\r\n        const col = this.props.col;\r\n\r\n        this.setState({\r\n            background: \r\n                <Tile width={offsetW} height={offsetH} row={row} col={col} key={0}/> \r\n            ,\r\n            width: col * offsetW,\r\n            height: row * offsetH,\r\n        });\r\n        \r\n        this.GetObjects();\r\n    }\r\n\r\n    ConvertToHTML = (elements) => {\r\n        let html = '';\r\n        elements.map((element) => {\r\n            return (\r\n                html += element.outerHTML);\r\n        })\r\n\r\n        return html;\r\n    }\r\n\r\n    GetObjects = async () => {\r\n        //const objects = await this.CallApi();\r\n        //this.props.setContainer(objects);\r\n    }\r\n\r\n    CallApi = () => {\r\n    }\r\n    \r\n    render() {\r\n        console.log('render');\r\n\r\n        let items = this.ConvertToHTML(this.props.items);\r\n\r\n        const rect  = {\r\n            left: 50,\r\n            top: 50,\r\n            width: this.state.width,\r\n            height: this.state.height\r\n        };        \r\n\r\n        return (  \r\n            <DropZone tag=\"board\" rect={rect}>\r\n                <Main rect={rect}>\r\n                    {this.state.background}\r\n                </Main>\r\n                <div dangerouslySetInnerHTML={{ __html: items }} />\r\n            </DropZone>\r\n        );\r\n    }\r\n}\r\n\r\nclass Tiles extends Component {\r\n    CreateTile = () => {\r\n        let temp = [];\r\n        const offsetW  = this.state.offsetWidth;\r\n        const offsetH  = this.state.offsetHeihgt; \r\n        const size = this.state.row * this.state.col;\r\n\r\n        for(let i = 0; i < size; ++i) {\r\n            temp.push(<img src={tileImg} width={offsetW} height={offsetH} key={i} alt=\"tile\" draggable=\"false\" />);\r\n        }\r\n        this.setState({ tiles: temp });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Background>\r\n                {this.state.tiles}\r\n            </Background>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board; "]},"metadata":{},"sourceType":"module"}