{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Board.js\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n    float: left;\\n    line-height: 0px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    top: 50px;\\n    left: 50px;\\n    width: \", \";\\n    height: \", \";\\n    border: solid;\\n    border-width: 1px;\\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport tileImg from '../resources/tile.jpg';\nimport DropZone from './DropZone';\nconst Main = styled.div(_templateObject(), props => props.width, props => props.height);\nconst Background = styled.div(_templateObject2());\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: [],\n      width: 0,\n      height: 0\n    };\n\n    this.GetObjects = async () => {\n      const objects = await this.CallApi();\n      this.setState(_objectSpread({}, this.state));\n    };\n\n    this.CallApi = () => {\n      return console.log('call api');\n    };\n  }\n\n  componentWillMount() {\n    const offsetW = 50;\n    const offsetH = 50;\n    const row = this.props.row;\n    const col = this.props.col;\n    this.setState({\n      body: [...this.state.body, React.createElement(Tile, {\n        width: offsetW,\n        height: offsetH,\n        row: row,\n        col: col,\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })],\n      width: col * offsetW,\n      height: row * offsetH\n    });\n    this.GetObjects();\n  }\n\n  render() {\n    const boardWidth = this.state.width + 'px';\n    const boardHeight = this.state.height + 'px';\n    return React.createElement(Main, {\n      width: boardWidth,\n      height: boardHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(DropZone, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.body));\n  }\n\n}\n\nclass Tile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      body: [],\n      offsetWidth: this.props.width,\n      offsetHeihgt: this.props.height,\n      row: this.props.row,\n      col: this.props.col\n    };\n\n    this.CreateTile = () => {\n      let temp = [];\n      const offsetW = this.state.offsetWidth;\n      const offsetH = this.state.offsetHeihgt;\n      const row = this.state.row;\n      const col = this.state.col;\n\n      for (let i = 0; i < row; ++i) {\n        for (let j = 0; j < col; ++j) {\n          temp.push(React.createElement(\"img\", {\n            src: tileImg,\n            width: offsetW,\n            height: offsetH,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }));\n        }\n\n        temp.push(React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }));\n      }\n\n      this.setState({\n        body: temp\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.CreateTile();\n  }\n\n  render() {\n    return React.createElement(Background, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.body);\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Board.js"],"names":["React","Component","styled","tileImg","DropZone","Main","div","props","width","height","Background","Board","state","body","GetObjects","objects","CallApi","setState","console","log","componentWillMount","offsetW","offsetH","row","col","render","boardWidth","boardHeight","Tile","offsetWidth","offsetHeihgt","CreateTile","temp","i","j","push"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,IAAI,GAAGH,MAAM,CAACI,GAAV,oBAIGC,KAAK,IAAIA,KAAK,CAACC,KAJlB,EAKID,KAAK,IAAIA,KAAK,CAACE,MALnB,CAAV;AAWA,MAAMC,UAAU,GAAGR,MAAM,CAACI,GAAV,oBAAhB;;AAKA,MAAMK,KAAN,SAAoBV,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BW,KAD0B,GAClB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJL,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KADkB;;AAAA,SAyB1BK,UAzB0B,GAyBb,YAAY;AACrB,YAAMC,OAAO,GAAG,MAAM,KAAKC,OAAL,EAAtB;AACA,WAAKC,QAAL,mBACO,KAAKL,KADZ;AAGH,KA9ByB;;AAAA,SAgC1BI,OAhC0B,GAgChB,MAAM;AACZ,aACIE,OAAO,CAACC,GAAR,CAAY,UAAZ,CADJ;AAGH,KApCyB;AAAA;;AAO1BC,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,OAAO,GAAG,EAAhB;AACA,UAAMC,OAAO,GAAG,EAAhB;AACA,UAAMC,GAAG,GAAG,KAAKhB,KAAL,CAAWgB,GAAvB;AACA,UAAMC,GAAG,GAAG,KAAKjB,KAAL,CAAWiB,GAAvB;AAEA,SAAKP,QAAL,CAAc;AACVJ,MAAAA,IAAI,EAAE,CACF,GAAG,KAAKD,KAAL,CAAWC,IADZ,EAEF,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEQ,OAAb;AAAsB,QAAA,MAAM,EAAEC,OAA9B;AAAuC,QAAA,GAAG,EAAEC,GAA5C;AAAiD,QAAA,GAAG,EAAEC,GAAtD;AAA2D,QAAA,GAAG,EAAE,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFE,CADI;AAKVhB,MAAAA,KAAK,EAAEgB,GAAG,GAAGH,OALH;AAMVZ,MAAAA,MAAM,EAAEc,GAAG,GAAGD;AANJ,KAAd;AASA,SAAKR,UAAL;AACH;;AAeDW,EAAAA,MAAM,GAAG;AACL,UAAMC,UAAU,GAAG,KAAKd,KAAL,CAAWJ,KAAX,GAAmB,IAAtC;AACA,UAAMmB,WAAW,GAAG,KAAKf,KAAL,CAAWH,MAAX,GAAoB,IAAxC;AAEA,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEiB,UAAb;AAAyB,MAAA,MAAM,EAAEC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,KAAL,CAAWC,IADhB,CADJ,CADJ;AAOH;;AAjDyB;;AAoD9B,MAAMe,IAAN,SAAmB3B,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBW,KADyB,GACjB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJgB,MAAAA,WAAW,EAAE,KAAKtB,KAAL,CAAWC,KAFpB;AAGJsB,MAAAA,YAAY,EAAE,KAAKvB,KAAL,CAAWE,MAHrB;AAIJc,MAAAA,GAAG,EAAE,KAAKhB,KAAL,CAAWgB,GAJZ;AAKJC,MAAAA,GAAG,EAAE,KAAKjB,KAAL,CAAWiB;AALZ,KADiB;;AAAA,SAazBO,UAbyB,GAaZ,MAAM;AACf,UAAIC,IAAI,GAAG,EAAX;AACA,YAAMX,OAAO,GAAI,KAAKT,KAAL,CAAWiB,WAA5B;AACA,YAAMP,OAAO,GAAI,KAAKV,KAAL,CAAWkB,YAA5B;AACA,YAAMP,GAAG,GAAG,KAAKX,KAAL,CAAWW,GAAvB;AACA,YAAMC,GAAG,GAAG,KAAKZ,KAAL,CAAWY,GAAvB;;AAEA,WAAI,IAAIS,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,GAAnB,EAAwB,EAAEU,CAA1B,EAA6B;AACzB,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,GAAnB,EAAwB,EAAEU,CAA1B,EAA6B;AACzBF,UAAAA,IAAI,CAACG,IAAL,CAAU;AAAK,YAAA,GAAG,EAAEhC,OAAV;AAAmB,YAAA,KAAK,EAAEkB,OAA1B;AAAmC,YAAA,MAAM,EAAEC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACH;;AACDU,QAAAA,IAAI,CAACG,IAAL,CAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAV;AACH;;AACD,WAAKlB,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAEmB;AAAR,OAAd;AACH,KA3BwB;AAAA;;AASzBZ,EAAAA,kBAAkB,GAAG;AACjB,SAAKW,UAAL;AACH;;AAkBDN,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,KAAL,CAAWC,IADhB,CADJ;AAKH;;AAnCwB;;AAsC7B,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components'\r\nimport tileImg from '../resources/tile.jpg'\r\nimport DropZone from './DropZone';\r\n\r\nconst Main = styled.div`\r\n    position: absolute;\r\n    top: 50px;\r\n    left: 50px;\r\n    width: ${props => props.width};\r\n    height: ${props => props.height};\r\n    border: solid;\r\n    border-width: 1px;\r\n    box-shadow: 5px 5px 8px 4px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Background = styled.div`\r\n    float: left;\r\n    line-height: 0px;\r\n`;\r\n\r\nclass Board extends Component {\r\n    state = {\r\n        body: [],\r\n        width: 0,\r\n        height: 0,        \r\n    }\r\n\r\n    componentWillMount() {        \r\n        const offsetW = 50;\r\n        const offsetH = 50;\r\n        const row = this.props.row;\r\n        const col = this.props.col;\r\n\r\n        this.setState({\r\n            body: [\r\n                ...this.state.body,\r\n                <Tile width={offsetW} height={offsetH} row={row} col={col} key={0}/> \r\n            ],\r\n            width: col * offsetW,\r\n            height: row * offsetH,\r\n        });\r\n        \r\n        this.GetObjects();\r\n    }\r\n    \r\n    GetObjects = async () => {\r\n        const objects = await this.CallApi();\r\n        this.setState ({\r\n            ...this.state\r\n        })\r\n    }\r\n\r\n    CallApi = () => {\r\n        return(\r\n            console.log('call api')\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const boardWidth = this.state.width + 'px';\r\n        const boardHeight = this.state.height + 'px';\r\n\r\n        return (  \r\n            <Main width={boardWidth} height={boardHeight}>\r\n                <DropZone >\r\n                    {this.state.body}\r\n                </DropZone>\r\n            </Main>            \r\n        );\r\n    }\r\n}\r\n\r\nclass Tile extends Component {\r\n    state = {\r\n        body: [],\r\n        offsetWidth: this.props.width,\r\n        offsetHeihgt: this.props.height,\r\n        row: this.props.row,\r\n        col: this.props.col\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.CreateTile();\r\n    }\r\n\r\n    CreateTile = () => {\r\n        let temp = [];\r\n        const offsetW  = this.state.offsetWidth;\r\n        const offsetH  = this.state.offsetHeihgt; \r\n        const row = this.state.row;\r\n        const col = this.state.col;\r\n\r\n        for(let i = 0; i < row; ++i) {\r\n            for(let j = 0; j < col; ++j) {\r\n                temp.push(<img src={tileImg} width={offsetW} height={offsetH} />);\r\n            }\r\n            temp.push(<br />);\r\n        }\r\n        this.setState({ body: temp });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Background>\r\n                {this.state.body}\r\n            </Background>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board; "]},"metadata":{},"sourceType":"module"}