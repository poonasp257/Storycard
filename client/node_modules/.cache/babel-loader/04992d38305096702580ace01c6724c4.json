{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { objectTypeSpreadProperty } from '@babel/types';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fixPositon = (x, y) => {\n      this.fixedX = x - this.offsetX * 0.5;\n      this.fixedY = y - this.offsetY * 0.5;\n      this.dragElem.setAttribute('style', \"\\n        position:absolute;\\n        left: \".concat(this.fixedX, \"px;\\n        top: \").concat(this.fixedY, \"px;\\n        \"));\n    };\n\n    this.GetTarget = tag => {\n      const targets = document.getElementsByClassName(tag);\n      return Object.keys(targets).map(key => {\n        const left = parseInt(targets[key].style[\"left\"]);\n        const top = parseInt(targets[key].style[\"top\"]);\n        const right = parseInt(left) + parseInt(targets[key].style[\"width\"]);\n        const bottom = parseInt(top) + parseInt(targets[key].style[\"height\"]);\n        return {\n          left: left,\n          top: top,\n          right: right,\n          bottom: bottom\n        };\n      });\n    };\n\n    this.Overlap = (lhs, rhs) => {\n      return !(lhs.top > rhs.bottom || lhs.right < rhs.left || lhs.bottom < rhs.top || lhs.left > rhs.right);\n    };\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (x, y) => {\n      this.dragElem = this.sourceElem.cloneNode(true);\n      this.fixPositon(x, y);\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (this.state.clicked) {\n        window.getSelection().removeAllRanges();\n        this.moveDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      this.fixPositon(x, y);\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', this.handleMouseMove);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n      window.getSelection().removeAllRanges();\n      this.endDrag(e.clientX, e.clientY);\n    };\n\n    this.endDrag = (x, y) => {\n      this.fixPositon(x, y);\n      const targets = this.GetTarget(this.props.tag);\n      const dragRect = {\n        left: this.fixedX,\n        top: this.fixedY,\n        right: this.fixedX + this.offsetX,\n        bottom: this.fixedY + this.offsetY\n      };\n      Object.keys(targets).map(key => {\n        if (this.IsInside(targets[key], dragRect)) {\n          console.log('inside');\n        }\n\n        if (this.Overlap(targets[key], dragRect)) {\n          console.log('overlap');\n        }\n      });\n      document.body.removeChild(this.dragElem);\n      this.setState({\n        clicked: false,\n        dragging: false\n      });\n    };\n\n    this.state = {\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.fixedX = 0;\n    this.fixedY = 0;\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    const rect = this.sourceElem.getBoundingClientRect();\n    this.offsetX = rect.width;\n    this.offsetY = rect.height;\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.propTypes = {\n  tag: PropTypes.string.isRequired\n};\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","ReactDOM","PropTypes","objectTypeSpreadProperty","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","fixPositon","x","y","fixedX","offsetX","fixedY","offsetY","dragElem","setAttribute","GetTarget","tag","targets","document","getElementsByClassName","Object","keys","map","key","left","parseInt","style","top","right","bottom","Overlap","lhs","rhs","addListeners","element","addEventListener","handleMouseDown","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","sourceElem","cloneNode","body","appendChild","setState","clicked","state","window","getSelection","removeAllRanges","moveDrag","dragging","preventDefault","removeEventListener","endDrag","dragRect","IsInside","console","log","removeChild","componentDidMount","imgs","getElementsByTagName","i","length","rect","getBoundingClientRect","width","height","render","content","children","c","propTypes","string","isRequired","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { objectTypeSpreadProperty } from '@babel/types';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.fixedX = 0;\r\n        this.fixedY = 0;\r\n        this.offsetX = 0;\r\n        this.offsetY = 0;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n            imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        const rect = this.sourceElem.getBoundingClientRect();\r\n        this.offsetX = rect.width;\r\n        this.offsetY = rect.height;\r\n        this.addListeners(this.sourceElem);\r\n    }\r\n\r\n    fixPositon = (x, y) => {\r\n        this.fixedX = x - (this.offsetX * 0.5);  \r\n        this.fixedY = y - (this.offsetY * 0.5);\r\n        \r\n        this.dragElem.setAttribute('style', `\r\n        position:absolute;\r\n        left: ${this.fixedX}px;\r\n        top: ${this.fixedY}px;\r\n        `);\r\n    };\r\n\r\n    GetTarget = (tag) => {\r\n        const targets = document.getElementsByClassName(tag);\r\n        return (\r\n            Object.keys(targets).map((key) => {\r\n                const left = parseInt(targets[key].style[\"left\"]);\r\n                const top = parseInt(targets[key].style[\"top\"]);\r\n                const right = parseInt(left) + parseInt(targets[key].style[\"width\"]);\r\n                const bottom = parseInt(top) + parseInt(targets[key].style[\"height\"]);\r\n\r\n                return ({\r\n                    left: left,\r\n                    top: top,\r\n                    right: right, \r\n                    bottom: bottom,\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    Overlap = (lhs, rhs) => {\r\n        return !(\r\n            lhs.top > rhs.bottom || lhs.right < rhs.left ||\r\n            lhs.bottom < rhs.top || lhs.left > rhs.right\r\n        ); \r\n    }\r\n    \r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n    \r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {   \r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (x, y) => {        \r\n        this.dragElem = this.sourceElem.cloneNode(true);        \r\n        this.fixPositon(x, y);\r\n\r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    } \r\n\r\n    handleMouseMove = (e) => {        \r\n        if (this.state.clicked) {\r\n            window.getSelection().removeAllRanges();\r\n            this.moveDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {       \r\n        this.fixPositon(x, y);        \r\n        this.setState({dragging: true});        \r\n    } \r\n\r\n    handleMouseUp = (e) => {\r\n            e.preventDefault();\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            window.getSelection().removeAllRanges();\r\n            this.endDrag(e.clientX, e.clientY);\r\n    }\r\n\r\n    endDrag = (x ,y) => {\r\n        this.fixPositon(x, y);\r\n\r\n        const targets = this.GetTarget(this.props.tag);\r\n        const dragRect = {\r\n          left: this.fixedX,\r\n          top: this.fixedY,\r\n          right: this.fixedX + this.offsetX,\r\n          bottom: this.fixedY + this.offsetY\r\n        };\r\n\r\n        Object.keys(targets).map((key) => {\r\n            if(this.IsInside(targets[key], dragRect)) {\r\n                console.log('inside')\r\n            }\r\n            if(this.Overlap(targets[key], dragRect)) {\r\n                console.log('overlap')\r\n            }\r\n        })\r\n\r\n        document.body.removeChild(this.dragElem);\r\n        this.setState({ \r\n            clicked: false,\r\n            dragging: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n\r\n        return (\r\n            <div ref={(c) => {this.sourceElem = c;}}>\r\n                {content}         \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.propTypes = {\r\n    tag: PropTypes.string.isRequired\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}