{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fixPositon = (x, y) => {\n      this.fixedX = x - this.offsetX * 0.5;\n      this.fixedY = y - this.offsetY * 0.5;\n      console.log(document.body.scrollHeight);\n      console.log('before:' + x, y);\n      console.log('after:' + this.fixedX, this.fixedY);\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            width: \".concat(this.offsetX, \"px;\\n            height: \").concat(this.offsetY, \"px;\\n            left: \").concat(this.fixedX, \"px;\\n            top: \").concat(this.fixedY, \"px;\\n            right: \").concat(this.fixedX + this.offsetX, \"px;\\n            bottom: \").concat(this.fixedY + this.offsetY, \"px;\\n        \"));\n    };\n\n    this.GetRects = targets => {\n      return Object.keys(targets).map(key => {\n        const width = parseInt(targets[key].style[\"width\"]);\n        const height = parseInt(targets[key].style[\"height\"]);\n        const left = parseInt(targets[key].style[\"left\"]);\n        const top = parseInt(targets[key].style[\"top\"]);\n        const right = parseInt(left) + width;\n        const bottom = parseInt(top) + height;\n        return {\n          width: width,\n          height: height,\n          left: left,\n          top: top,\n          right: right,\n          bottom: bottom\n        };\n      });\n    };\n\n    this.Overlap = (lhs, rhs) => {\n      return !(lhs.top > rhs.bottom || lhs.right < rhs.left || lhs.bottom < rhs.top || lhs.left > rhs.right);\n    };\n\n    this.IsContaining = (lhs, rhs) => {\n      return lhs.left <= rhs.left && rhs.left <= lhs.left + lhs.width - rhs.width && lhs.top <= rhs.top && rhs.top <= lhs.top + lhs.height - rhs.height;\n    };\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (x, y) => {\n      this.dragElem = this.sourceElem.cloneNode(true);\n      this.fixPositon(x, y);\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (this.state.clicked) {\n        window.getSelection().removeAllRanges();\n        this.moveDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      this.fixPositon(x, y);\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', this.handleMouseMove);\n      document.removeEventListener('mouseup', this.handleMouseUp);\n      window.getSelection().removeAllRanges();\n      this.endDrag(e.clientX, e.clientY);\n    };\n\n    this.endDrag = (x, y) => {\n      this.fixPositon(x, y);\n      const targets = document.getElementsByClassName(this.props.tag);\n      const targetRects = this.GetRects(targets);\n      const dragRect = {\n        width: this.offsetX,\n        height: this.offsetY,\n        left: this.fixedX,\n        top: this.fixedY,\n        right: this.fixedX + this.offsetX,\n        bottom: this.fixedY + this.offsetY\n      };\n      Object.keys(targetRects).map(i => {\n        if (this.IsContaining(targetRects[i], dragRect)) {\n          const otherObj = targets[i].getElementsByClassName(\"draggable\");\n          const objRects = this.GetRects(otherObj);\n\n          for (let rect of objRects) {\n            if (this.Overlap(rect, dragRect)) return false;\n          }\n\n          this.props.addItem(this.dragElem);\n        }\n\n        return true;\n      });\n      document.body.removeChild(this.dragElem);\n      this.setState({\n        clicked: false,\n        dragging: false\n      });\n    };\n\n    this.state = {\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.fixedX = 0;\n    this.fixedY = 0;\n    this.offsetX = 0;\n    this.offsetY = 0;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    const rect = this.sourceElem.getBoundingClientRect();\n    this.offsetX = rect.width;\n    this.offsetY = rect.height;\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      className: \"draggable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.propTypes = {\n  tag: PropTypes.string.isRequired\n};\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","PropTypes","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","fixPositon","x","y","fixedX","offsetX","fixedY","offsetY","console","log","document","body","scrollHeight","dragElem","setAttribute","GetRects","targets","Object","keys","map","key","width","parseInt","style","height","left","top","right","bottom","Overlap","lhs","rhs","IsContaining","addListeners","element","addEventListener","handleMouseDown","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","sourceElem","cloneNode","appendChild","setState","clicked","state","window","getSelection","removeAllRanges","moveDrag","dragging","preventDefault","removeEventListener","endDrag","getElementsByClassName","tag","targetRects","dragRect","i","otherObj","objRects","rect","addItem","removeChild","componentDidMount","imgs","getElementsByTagName","length","getBoundingClientRect","render","content","children","c","propTypes","string","isRequired","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.fixedX = 0;\r\n        this.fixedY = 0;\r\n        this.offsetX = 0;\r\n        this.offsetY = 0;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n            imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        const rect = this.sourceElem.getBoundingClientRect();\r\n        this.offsetX = rect.width;\r\n        this.offsetY = rect.height;\r\n        this.addListeners(this.sourceElem);\r\n    }\r\n\r\n    fixPositon = (x, y) => {\r\n        this.fixedX = x - (this.offsetX * 0.5);\r\n        this.fixedY = y - (this.offsetY * 0.5);\r\n\r\n        console.log(document.body.scrollHeight);\r\n\r\n        console.log('before:'+ x, y);\r\n        console.log('after:'+this.fixedX, this.fixedY);\r\n\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            width: ${this.offsetX}px;\r\n            height: ${this.offsetY}px;\r\n            left: ${this.fixedX}px;\r\n            top: ${this.fixedY}px;\r\n            right: ${this.fixedX + this.offsetX}px;\r\n            bottom: ${this.fixedY + this.offsetY}px;\r\n        `);\r\n    };\r\n\r\n    GetRects = (targets) => {\r\n        return (\r\n            Object.keys(targets).map((key) => {\r\n                const width = parseInt(targets[key].style[\"width\"]);\r\n                const height = parseInt(targets[key].style[\"height\"]);\r\n                const left = parseInt(targets[key].style[\"left\"]);\r\n                const top = parseInt(targets[key].style[\"top\"]);\r\n                const right = parseInt(left) + width;\r\n                const bottom = parseInt(top) + height;\r\n\r\n                return ({\r\n                    width: width,\r\n                    height: height,\r\n                    left: left,\r\n                    top: top,\r\n                    right: right,\r\n                    bottom: bottom,\r\n                });\r\n            })\r\n        );\r\n    }\r\n\r\n    Overlap = (lhs, rhs) => {\r\n        return !(\r\n            lhs.top > rhs.bottom || lhs.right < rhs.left ||\r\n            lhs.bottom < rhs.top || lhs.left > rhs.right\r\n        );\r\n    }\r\n\r\n    IsContaining = (lhs, rhs) => {\r\n        return (\r\n            lhs.left <= rhs.left &&\r\n            rhs.left <= lhs.left + lhs.width - rhs.width &&\r\n            lhs.top <= rhs.top &&\r\n            rhs.top <= lhs.top + lhs.height - rhs.height\r\n        );\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        if (usesLeftButton(e)) {\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (x, y) => {\r\n        this.dragElem = this.sourceElem.cloneNode(true);\r\n        this.fixPositon(x, y);        \r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    }\r\n\r\n    handleMouseMove = (e) => {\r\n        if (this.state.clicked) {\r\n            window.getSelection().removeAllRanges();\r\n            this.moveDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {\r\n        this.fixPositon(x, y);\r\n        this.setState({ dragging: true });\r\n    }\r\n\r\n    handleMouseUp = (e) => {\r\n        e.preventDefault();\r\n        document.removeEventListener('mousemove', this.handleMouseMove);\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n        window.getSelection().removeAllRanges();\r\n        this.endDrag(e.clientX, e.clientY);\r\n    }\r\n\r\n    endDrag = (x, y) => {\r\n        this.fixPositon(x, y);\r\n\r\n        const targets = document.getElementsByClassName(this.props.tag);\r\n        const targetRects = this.GetRects(targets);\r\n        const dragRect = {\r\n            width: this.offsetX,\r\n            height: this.offsetY,\r\n            left: this.fixedX,\r\n            top: this.fixedY,\r\n            right: this.fixedX + this.offsetX,\r\n            bottom: this.fixedY + this.offsetY\r\n        };\r\n\r\n        Object.keys(targetRects).map((i) => {\r\n            if (this.IsContaining(targetRects[i], dragRect)) {\r\n                const otherObj = targets[i].getElementsByClassName(\"draggable\");\r\n                const objRects = this.GetRects(otherObj);\r\n\r\n                for(let rect of objRects) {\r\n                    if(this.Overlap(rect, dragRect)) return false;\r\n                }\r\n\r\n                this.props.addItem(this.dragElem);\r\n            }\r\n\r\n            return true;\r\n        });\r\n        \r\n        document.body.removeChild(this.dragElem);\r\n        this.setState({\r\n            clicked: false,\r\n            dragging: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n        return (\r\n            <div ref={(c) => { this.sourceElem = c; }} className=\"draggable\">\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.propTypes = {\r\n    tag: PropTypes.string.isRequired\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => { },\r\n    onDrag: () => { },\r\n    onDragEnd: () => { },\r\n    onDrop: () => { },\r\n    render: null,\r\n    zIndex: 1000,\r\n};\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}