{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        console.log('down');\n        this.dragElem = this.sourceElem.cloneNode(true);\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (x, y) => {\n      const fixedX = x - this.state.offsetX;\n      const fixedY = y - this.state.offsetY;\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(fixedX, \"px;\\n            top: \").concat(fixedY, \"px;\\n        \"));\n      document.body.appendChild(this.dragElem);\n      this.setState({\n        clicked: true\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (this.state.clicked) {\n        console.log('move');\n        window.getSelection().removeAllRanges();\n        this.moveDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.moveDrag = (x, y) => {\n      const fixedX = x - this.state.offsetX;\n      const fixedY = y - this.state.offsetY;\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(fixedX, \"px;\\n            top: \").concat(fixedY, \"px;\\n        \"));\n      this.setState({\n        dragging: true\n      });\n    };\n\n    this.handleMouseUp = e => {\n      if (this.state.dragging) {\n        console.log('up');\n        e.preventDefault();\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n        window.getSelection().removeAllRanges();\n        this.endDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.endDrag = (x, y) => {\n      const fixedX = x - this.state.offsetX;\n      const fixedY = y - this.state.offsetY;\n      this.dragElem.setAttribute('style', \"\\n            position:absolute;\\n            left: \".concat(fixedX, \"px;\\n            top: \").concat(fixedY, \"px;\\n        \"));\n      this.props.container.push(this.dragElem);\n      document.body.removeChild(this.dragElem);\n      this.setState({\n        clicked: false,\n        dragging: false\n      });\n    };\n\n    this.state = {\n      offsetX: 0,\n      offsetY: 0,\n      clicked: false,\n      dragging: false\n    };\n    this.sourceElem = null;\n    this.dragElem = null;\n    this.currentTarget = null;\n    this.prevTarget = null;\n  }\n\n  componentDidMount() {\n    const imgs = this.sourceElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    const rect = this.sourceElem.getBoundingClientRect();\n    this.setState({\n      offsetX: rect.width * 0.5 + 5,\n      offsetY: rect.height * 0.5 + 15\n    });\n    this.addListeners(this.sourceElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.sourceElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  render: null,\n  zIndex: 1000\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","styled","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","addListeners","element","addEventListener","handleMouseDown","console","log","dragElem","sourceElem","cloneNode","document","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","x","y","fixedX","state","offsetX","fixedY","offsetY","setAttribute","body","appendChild","setState","clicked","window","getSelection","removeAllRanges","moveDrag","dragging","preventDefault","removeEventListener","endDrag","container","push","removeChild","currentTarget","prevTarget","componentDidMount","imgs","getElementsByTagName","i","length","rect","getBoundingClientRect","width","height","render","content","children","c","defaultProps","onDragStart","onDrag","onDragEnd","onDrop","zIndex"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n\r\n        this.sourceElem = null;\r\n        this.dragElem = null;\r\n        this.currentTarget = null;\r\n        this.prevTarget = null;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.sourceElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n            imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        const rect = this.sourceElem.getBoundingClientRect();\r\n        this.setState({\r\n            offsetX: rect.width * 0.5 + 5,\r\n            offsetY: rect.height * 0.5 + 15\r\n        });\r\n\r\n        this.addListeners(this.sourceElem);\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n    \r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {\r\n            console.log('down');            \r\n            this.dragElem = this.sourceElem.cloneNode(true);\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (x, y) => {\r\n        const fixedX = x - this.state.offsetX;\r\n        const fixedY = y - this.state.offsetY;\r\n        \r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${fixedX}px;\r\n            top: ${fixedY}px;\r\n        `);\r\n        document.body.appendChild(this.dragElem);\r\n        this.setState({ clicked: true });\r\n    } \r\n\r\n    handleMouseMove = (e) => {\r\n        if (this.state.clicked) {\r\n            console.log('move');\r\n            window.getSelection().removeAllRanges();\r\n            this.moveDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    moveDrag = (x, y) => {\r\n        const fixedX = x - this.state.offsetX;\r\n        const fixedY = y - this.state.offsetY;\r\n\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${fixedX}px;\r\n            top: ${fixedY}px;\r\n        `);\r\n        \r\n        this.setState({dragging: true});        \r\n    } \r\n\r\n    handleMouseUp = (e) => {\r\n        if (this.state.dragging) {\r\n            console.log('up');\r\n\r\n            e.preventDefault();\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            window.getSelection().removeAllRanges();\r\n            this.endDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    endDrag = (x ,y) => {\r\n        const fixedX = x - this.state.offsetX;\r\n        const fixedY = y - this.state.offsetY;\r\n\r\n        this.dragElem.setAttribute('style', `\r\n            position:absolute;\r\n            left: ${fixedX}px;\r\n            top: ${fixedY}px;\r\n        `);\r\n\r\n        this.props.container.push(this.dragElem);\r\n        \r\n        document.body.removeChild(this.dragElem);\r\n        this.setState({ \r\n            clicked: false,\r\n            dragging: false \r\n        });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n\r\n        return (\r\n            <div ref={(c) => {this.sourceElem = c;}}>\r\n                {content}                    \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    render: null,\r\n    zIndex: 1000,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}