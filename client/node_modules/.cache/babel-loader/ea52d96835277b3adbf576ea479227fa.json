{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JunYoung\\\\Desktop\\\\GitHub\\\\storycard\\\\client\\\\src\\\\App\\\\components\\\\Draggable.js\";\nimport React, { Component } from 'react';\n\nfunction usesLeftButton(e) {\n  const button = e.buttons || e.which || e.button;\n  return button === 1;\n}\n\nclass Draggable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addListeners = element => {\n      element.addEventListener('mousedown', e => {\n        this.handleMouseDown(e);\n      }, false);\n    };\n\n    this.setCurrentTarget = (x, y) => {\n      this.dragElem.style.zIndex = -1;\n      const target = document.elementFromPoint(x, y) || document.body;\n      this.dragElem.style.zIndex = this.props.zIndex; // prevent it from selecting itself as the target\n\n      this.currentTarget = this.dragElem.contains(target) ? document.body : target;\n    };\n\n    this.generateEnterLeaveEvents = (x, y) => {\n      this.setCurrentTarget(x, y);\n\n      if (this.currentTarget !== this.prevTarget) {\n        if (this.prevTarget) {\n          this.prevTarget.dispatchEvent(this.buildCustomEvent(\"\".concat(prefix, \"DragLeave\")));\n        }\n\n        if (this.currentTarget) {\n          this.currentTarget.dispatchEvent(this.buildCustomEvent(\"\".concat(prefix, \"DragEnter\")));\n        }\n      }\n\n      this.prevTarget = this.currentTarget;\n    };\n\n    this.generateDropEvent = (x, y) => {\n      // generate a drop event in whatever we're currently dragging over\n      this.setCurrentTarget(x, y);\n      const customEvent = this.buildCustomEvent(\"\".concat(this.props.targetKey, \"Drop\"), {\n        x,\n        y\n      });\n      this.currentTarget.dispatchEvent(customEvent);\n    };\n\n    this.handleMouseDown = e => {\n      if (usesLeftButton(e)) {\n        document.addEventListener('mousemove', this.handleMouseMove);\n        document.addEventListener('mouseup', this.handleMouseUp);\n        this.startDrag(e.clientX, e.clientY);\n      }\n    };\n\n    this.startDrag = (clientX, clientY) => {\n      console.log('startDrag');\n      const rect = this.containerElem.getBoundingClientRect();\n      this.setState({\n        clicked: true,\n        leftOffset: rect.left - clientX,\n        topOffset: rect.top - clientY,\n        left: rect.left,\n        top: rect.top\n      });\n    };\n\n    this.handleMouseMove = e => {\n      if (!this.props.noDragging) {\n        e.preventDefault();\n\n        if (this.state.clicked) {\n          this.drag(e.clientX, e.clientY);\n          window.getSelection().removeAllRanges();\n        }\n      }\n    };\n\n    this.drag = (x, y) => {\n      console.log('during drag'); //this.generateEnterLeaveEvents(x, y);\n\n      const stateChanges = {\n        dragging: true\n      };\n      this.setState(stateChanges); //this.props.onDrag(this.props.dragData, this.currentTarget, x, y);\n    };\n\n    this.handleMouseUp = e => {\n      this.setState({\n        clicked: false\n      });\n\n      if (this.state.dragging) {\n        document.removeEventListener('mousemove', this.handleMouseMove);\n        document.removeEventListener('mouseup', this.handleMouseUp);\n        this.drop(e.clientX, e.clientY);\n        window.getSelection().removeAllRanges();\n      }\n    };\n\n    this.drop = (clientX, clientY) => {\n      console.log('drop');\n      this.setState({\n        dragging: false\n      });\n    };\n\n    this.state = {\n      leftOffset: 0,\n      topOffset: 0,\n      left: 0,\n      top: 0,\n      clicked: false,\n      dragging: false\n    };\n    this.containerElem = null;\n    this.currentTarget = null;\n    this.prevTarget = null;\n  }\n\n  componentDidMount() {\n    const imgs = this.containerElem.getElementsByTagName('IMG');\n\n    for (let i = 0; i < imgs.length; ++i) {\n      imgs[i].setAttribute('draggable', 'false');\n    }\n\n    this.addListeners(this.containerElem);\n  }\n\n  render() {\n    const content = this.props.children;\n    const ghost = React.createElement(\"div\", {\n      className: \"ddcontainerghost\",\n      style: ghostStyles,\n      ref: c => {\n        this.dragElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, ghostContent);\n    return React.createElement(\"div\", {\n      ref: c => {\n        this.containerElem = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nDraggable.defaultProps = {\n  children: null,\n  onDragStart: () => {},\n  onDrag: () => {},\n  onDragEnd: () => {},\n  onDrop: () => {},\n  noDragging: false,\n  render: null\n};\nexport default Draggable;","map":{"version":3,"sources":["C:\\Users\\JunYoung\\Desktop\\GitHub\\storycard\\client\\src\\App\\components\\Draggable.js"],"names":["React","Component","usesLeftButton","e","button","buttons","which","Draggable","constructor","props","addListeners","element","addEventListener","handleMouseDown","setCurrentTarget","x","y","dragElem","style","zIndex","target","document","elementFromPoint","body","currentTarget","contains","generateEnterLeaveEvents","prevTarget","dispatchEvent","buildCustomEvent","prefix","generateDropEvent","customEvent","targetKey","handleMouseMove","handleMouseUp","startDrag","clientX","clientY","console","log","rect","containerElem","getBoundingClientRect","setState","clicked","leftOffset","left","topOffset","top","noDragging","preventDefault","state","drag","window","getSelection","removeAllRanges","stateChanges","dragging","removeEventListener","drop","componentDidMount","imgs","getElementsByTagName","i","length","setAttribute","render","content","children","ghost","ghostStyles","c","ghostContent","defaultProps","onDragStart","onDrag","onDragEnd","onDrop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nfunction usesLeftButton(e) {\r\n    const button = e.buttons || e.which || e.button;\r\n    return button === 1;\r\n}\r\n\r\nclass Draggable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            leftOffset: 0,\r\n            topOffset: 0,\r\n            left: 0,\r\n            top: 0,\r\n            clicked: false,\r\n            dragging: false,\r\n        }\r\n        \r\n        this.containerElem = null;\r\n        this.currentTarget = null;\r\n        this.prevTarget = null;\r\n    }    \r\n\r\n    componentDidMount() {\r\n        const imgs = this.containerElem.getElementsByTagName('IMG');\r\n        for (let i = 0; i < imgs.length; ++i) {\r\n          imgs[i].setAttribute('draggable', 'false');\r\n        }\r\n\r\n        this.addListeners(this.containerElem);\r\n    }\r\n\r\n    addListeners = (element) => {\r\n        element.addEventListener('mousedown', (e) => { this.handleMouseDown(e); }, false);\r\n    };\r\n\r\n    setCurrentTarget = (x, y) => {\r\n        this.dragElem.style.zIndex = -1;\r\n        const target = document.elementFromPoint(x, y) || document.body;\r\n        this.dragElem.style.zIndex = this.props.zIndex;\r\n        // prevent it from selecting itself as the target\r\n        this.currentTarget = this.dragElem.contains(target) ? document.body : target;\r\n    };\r\n\r\n    generateEnterLeaveEvents = (x, y) => {\r\n        this.setCurrentTarget(x, y);\r\n        if (this.currentTarget !== this.prevTarget) {\r\n            if (this.prevTarget) { this.prevTarget.dispatchEvent(this.buildCustomEvent(`${prefix}DragLeave`)); }\r\n            if (this.currentTarget) { this.currentTarget.dispatchEvent(this.buildCustomEvent(`${prefix}DragEnter`)); }\r\n        }\r\n        this.prevTarget = this.currentTarget;\r\n    };\r\n\r\n    generateDropEvent = (x, y) => {\r\n        // generate a drop event in whatever we're currently dragging over\r\n        this.setCurrentTarget(x, y);\r\n        const customEvent = this.buildCustomEvent(`${this.props.targetKey}Drop`, { x, y });\r\n        this.currentTarget.dispatchEvent(customEvent);\r\n    };\r\n\r\n    handleMouseDown = (e) => {\r\n        if(usesLeftButton(e))\r\n        {\r\n            document.addEventListener('mousemove', this.handleMouseMove);\r\n            document.addEventListener('mouseup', this.handleMouseUp);\r\n            this.startDrag(e.clientX, e.clientY);\r\n        }\r\n    }\r\n\r\n    startDrag = (clientX, clientY) => {\r\n        console.log('startDrag')\r\n        const rect = this.containerElem.getBoundingClientRect();\r\n        this.setState({\r\n            clicked: true,\r\n            leftOffset: rect.left - clientX,\r\n            topOffset: rect.top - clientY,\r\n            left: rect.left,\r\n            top: rect.top,\r\n        });\r\n    } \r\n\r\n    handleMouseMove = (e) => {\r\n        if (!this.props.noDragging) {            \r\n            e.preventDefault();\r\n            if (this.state.clicked) {\r\n              this.drag(e.clientX, e.clientY);\r\n              window.getSelection().removeAllRanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    drag = (x, y) => {\r\n        console.log('during drag')\r\n        //this.generateEnterLeaveEvents(x, y);\r\n        const stateChanges = { dragging: true };\r\n        \r\n        this.setState(stateChanges);\r\n        //this.props.onDrag(this.props.dragData, this.currentTarget, x, y);\r\n    };\r\n\r\n    handleMouseUp = (e) => {\r\n        this.setState({ clicked: false });\r\n        if (this.state.dragging) {\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n            document.removeEventListener('mouseup', this.handleMouseUp);\r\n            this.drop(e.clientX, e.clientY);\r\n            window.getSelection().removeAllRanges();\r\n        }\r\n    }\r\n\r\n    drop = (clientX, clientY) => {\r\n        console.log('drop')\r\n        this.setState({ dragging: false });\r\n    }\r\n\r\n    render() {\r\n        const content = this.props.children;\r\n        const ghost = (\r\n            <div className=\"ddcontainerghost\" style={ghostStyles} ref={(c) => { this.dragElem = c; }}>\r\n              {ghostContent}\r\n            </div>\r\n          );\r\n\r\n        return (\r\n            <div ref={(c) => {this.containerElem = c;}}>\r\n                <span>\r\n                    {content}                    \r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDraggable.defaultProps = {\r\n    children: null,\r\n    onDragStart: () => {},\r\n    onDrag: () => {},\r\n    onDragEnd: () => {},\r\n    onDrop: () => {},\r\n    noDragging: false,\r\n    render: null,\r\n  };\r\n\r\nexport default Draggable;"]},"metadata":{},"sourceType":"module"}